!SESSION 2020-09-19 14:51:13.397 -----------------------------------------------
eclipse.buildId=3.9.13.202006181137-RELEASE-e416
java.version=1.8.0_221
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.springsource.sts.ide
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.springsource.sts.ide

This is a continuation of log file D:\project\erpn7\.metadata\.bak_0.log
Created Time: 2020-09-19 15:06:52.475

!ENTRY org.eclipse.jdt.ui 4 2 2020-09-19 15:06:52.475
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-09-19 15:06:52.475
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-09-19 15:06:56.179
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.n7.erp.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.ModelAndView;
import com.n7.erp.dao.AccountDao;
import com.google.gson.Gson;
import com.n7.erp.bean.ac.A_company;
import com.n7.erp.bean.ac.ApprovalDocument;
<<<<<<< HEAD
import com.n7.erp.bean.ApprovalDocu;
=======
import com.n7.erp.bean.ac.Approvaldocu;
>>>>>>> origin/JSJ
import com.n7.erp.bean.ac.SaleInfo;
import com.n7.erp.bean.ac.myCompany;
import com.n7.erp.bean.ac.approvalLine;



@Component
public class AccountMM {

	@Autowired
	AccountDao aDao;

	ModelAndView mav;

	public Map<String, List<A_company>> insertcomlist(A_company ac, HttpSession session) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_ccode(session.getAttribute("cCode").toString());
		if(ac.getCl_code()!="") {
			if(aDao.insertcomlist(ac)) {
			   List<A_company> aList = aDao.getComList(ac.getCl_code());
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
			}else {
				aMap=null;
			}
		}else {
			List<A_company> aList = aDao.getComList(ac.getCl_code());
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}
		return aMap;
	}

	public Map<String, List<A_company>> serchcomlist() {
		Map<String, List<A_company>> aMap=null;
			   List<A_company> aList = aDao.getCompanyList();
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		return aMap;
	}

	public Map<String, List<A_company>> searchcode(A_company ac, String code) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_code(code);
		   List<A_company> aList = aDao.getsearchCode(ac);
		   if(aList!=null) {
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		   }
	return aMap;
}

	public Map<String, List<A_company>> deleteCom(int cnt, String[] strArray) {
		Map<String, List<A_company>> aMap=null;
		boolean result=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result=aDao.deleteCom(code);
		}
		if(result) {
			List<A_company> aList = aDao.getCompanyList();
			aMap=new HashMap<>();
			   aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saleinsert(HttpServletRequest request, SaleInfo si, HttpSession session) {
		String view=null;
		boolean a=false;
		boolean b= false;
		mav= new ModelAndView();
		A_company ac = new A_company();
		ac = aDao.getcomcode(si.getS_comnum());
		si.setS_clcode(ac.getCl_code());
		si.setS_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("s_pkind");
		String [] strcnt=request.getParameterValues("s_cnt");
		String [] strprice=request.getParameterValues("s_price");
		String [] strprice2=request.getParameterValues("s_price2");
		String [] strtax=request.getParameterValues("s_tax");
		String [] strtotal=request.getParameterValues("s_total");
		String [] strmemo=request.getParameterValues("s_memo");
		     	a = aDao.saleinsert(si);
		if(a && b) {
			    mav.addObject("msg","전표등록성공");
			    view="Account/openTable";
			}else {
				mav.addObject("msg","전표등록실패");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getsaleList() {
		Map<String, List<SaleInfo>> aMap=null;
		   List<SaleInfo> sList1 = aDao.getsaleList();
		   //List<SaleInfo> sList2 = aDao.getsaleList2();
		   if(sList1!=null) {
			   aMap=new HashMap<>();
			   aMap.put("sList1", sList1);
		   }else {
			   aMap=null;
		   }
		   //aMap.put("sList2", sList2);
	return aMap;
}

	public Map<String, List<SaleInfo>> getList(String code) {
		System.out.println(code);
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList = aDao.getList(code);
		if(sList!=null){
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}
		return sMap;
	}

	public ModelAndView getTaxbill(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();
		if(check!=null) {
			if(check.contains("S")) {
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				ac=aDao.getcomInfo(company);
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/taxbillS";
<<<<<<< HEAD

			}else {
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				mc=aDao.getmyCompany();
				ac=aDao.getcomInfo(company);
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				mav.addObject("msg","세금계산서 등록");
				view="Account/taxbillP";
			}
			}else {
				mav.addObject("msg","선택한 항목이없습니다");
				view="Account/openTable";
			}
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> deleteSale(int cnt, String[] strArray) {
		Map<String, List<SaleInfo>> aMap=null;
		boolean result=false;
		boolean result2=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result2=aDao.deleteSale2(code);
			result=aDao.deleteSale(code);
		}
		if(result && result2) {
			List<SaleInfo> sList = aDao.getsaleList();
			aMap=new HashMap<>();
			   aMap.put("sList", sList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saledetails(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();
<<<<<<< HEAD

		if(check!=null) {
				List<SaleInfo> tList = new ArrayList<>();
				tList=aDao.getTaxbill(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				myCompany mc = new myCompany();
=======
		
		if(check!=null) {
				List<SaleInfo> tList = new ArrayList<>();
				tList=aDao.getTaxbill(check); 
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				myCompany mc = new myCompany(); 
>>>>>>> origin/JSJ
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("tList",tList);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/saledetails";
			}else {
<<<<<<< HEAD

			    mav.addObject("msg","매출만 거래명세서를 볼수 있습니다");
				view="Account/openTable";
			}

=======
				
			    mav.addObject("msg","매출만 거래명세서를 볼수 있습니다");
				view="Account/openTable";
			}
		
>>>>>>> origin/JSJ
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView acApproval(String check) {
		mav= new ModelAndView();
		String view ="";
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/acApproval";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView approvalLine() {
		String view=null;
		mav= new ModelAndView();
		List<approvalLine> aList = null;
<<<<<<< HEAD
		aList=aDao.approvalLine();
=======
		aList=aDao.approvalLine(); 
>>>>>>> origin/JSJ
		if(aList.size()!=0) {
				mav.addObject("aList",new Gson().toJson(aList));
				view="Account/approvalLine";
			}else {
<<<<<<< HEAD

			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}

=======
				
			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}
		
>>>>>>> origin/JSJ
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<approvalLine>> searchName(String name) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList=null;
		if(name!=null) {
			aList = aDao.searchName(name);
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> addApproval(int cnt, String[] strArray) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList= new ArrayList<>();
		System.out.println("숫자="+cnt);
		System.out.println("이름값="+strArray.length);
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		String code="";
		approvalLine al = new approvalLine();
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			al=aDao.addApproval(code);
		    aList.add(al);
		}
		if(aList!=null) {
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> approLinecom(String[] code01) {
		Map<String, List<approvalLine>> aMap=null;
		System.out.println(code01.length);
		//System.out.println(code02[0]);
<<<<<<< HEAD

		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();

				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]);
=======
		
		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();
				
				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]); 
>>>>>>> origin/JSJ
					tList1.add(al);
				}
//				for(int i=0; i<code02.length; i++) {
//					approvalLine al = new approvalLine();
<<<<<<< HEAD
//					al=aDao.approLinecom2(code02[i]);
=======
//					al=aDao.approLinecom2(code02[i]); 
>>>>>>> origin/JSJ
//					tList2.add(al);
//				}
				aMap=new HashMap<>();
				System.out.println(tList1);
				aMap.put("tList1",tList1);
				//aMap.put("tList2",tList2);
			}else {
<<<<<<< HEAD

				aMap=null;;
			}

		return aMap;


=======
				
				aMap=null;;
			}
		
		return aMap;
	
	
>>>>>>> origin/JSJ
	}

	public ModelAndView approdocument(HttpServletRequest request, ApprovalDocument ad, HttpSession session) {
		String view=null;
		mav= new ModelAndView();
		boolean a=false;
		boolean b=false;
		boolean c=false;
		A_company ac = new A_company();
		ac = aDao.getcomcode(ad.getRs_comnum());
		ad.setRs_clcode(ac.getCl_code());
		ad.setRs_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("rs_pkind");
		String [] strcnt=request.getParameterValues("rs_cnt");
		String [] strprice=request.getParameterValues("rs_price");
		String [] strprice2=request.getParameterValues("rs_price2");
		String [] strtax=request.getParameterValues("rs_tax");
		String [] strtotal=request.getParameterValues("rs_total");
		String [] strmemo=request.getParameterValues("rs_memo");
		 		a = aDao.approvaldocu(ad);
		     	b = aDao.approdocument(ad);
<<<<<<< HEAD

=======
		     	
>>>>>>> origin/JSJ
		for(int i=0; i<strpkind.length; i++) {
			ad.setRs_pkind(strpkind[i]);
			ad.setRs_cnt(strcnt[i]);
			ad.setRs_price(strprice[i]);
			ad.setRs_price2(strprice2[i]);
			ad.setRs_tax(strtax[i]);
			ad.setRs_total(strtotal[i]);
			ad.setRs_memo(strmemo[i]);
			 	c=aDao.approdocument2(ad);
		}
		if(a && b && c) {
			//aDao.saleListDelete(ad);
			mav.addObject("num","1");
				view="Account/openTable";
			}else {
				mav.addObject("num","0");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getpkind(String pkind) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
		//SaleInfo si = new SaleInfo();
		sList=aDao.getpkind(pkind);
		//sList.add(si);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

	public ModelAndView SaleDetaile(String check) {
		String view=null;
		mav= new ModelAndView();
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/SaleDetaile";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="Account/opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> selectSearch(String select, String choice) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		sList=aDao.selectSreach(select,choice);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

<<<<<<< HEAD
	public Map<String, List<ApprovalDocu>> comparecode(String code) {
		Map<String, List<ApprovalDocu>> sMap=null;
		List<ApprovalDocu> sList=null;

=======
	public Map<String, List<Approvaldocu>> comparecode(String code) {
		Map<String, List<Approvaldocu>> sMap=null;
		List<Approvaldocu> sList=null;
		
>>>>>>> origin/JSJ
		sList=aDao.comparecode(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
<<<<<<< HEAD

	public Map<String, List<approvalLine>> getMyInfo(HttpSession session) {
		Map<String, List<approvalLine>> sMap=null;
		List<approvalLine> sList=null;
		String code = session.getAttribute("hrCode").toString();
		sList=aDao.getMyInfo(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
}
=======
}
>>>>>>> origin/JSJ

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-09-19 15:06:56.210
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-09-19 15:06:56.367
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-09-19 15:06:57.492
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.n7.erp.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.ModelAndView;
import com.n7.erp.dao.AccountDao;
import com.google.gson.Gson;
import com.n7.erp.bean.ac.A_company;
import com.n7.erp.bean.ac.ApprovalDocument;
<<<<<<< HEAD
import com.n7.erp.bean.ApprovalDocu;
=======
import com.n7.erp.bean.ac.Approvaldocu;
>>>>>>> origin/JSJ
import com.n7.erp.bean.ac.SaleInfo;
import com.n7.erp.bean.ac.myCompany;
import com.n7.erp.bean.ac.approvalLine;



@Component
public class AccountMM {

	@Autowired
	AccountDao aDao;

	ModelAndView mav;

	public Map<String, List<A_company>> insertcomlist(A_company ac, HttpSession session) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_ccode(session.getAttribute("cCode").toString());
		if(ac.getCl_code()!="") {
			if(aDao.insertcomlist(ac)) {
			   List<A_company> aList = aDao.getComList(ac.getCl_code());
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
			}else {
				aMap=null;
			}
		}else {
			List<A_company> aList = aDao.getComList(ac.getCl_code());
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}
		return aMap;
	}

	public Map<String, List<A_company>> serchcomlist() {
		Map<String, List<A_company>> aMap=null;
			   List<A_company> aList = aDao.getCompanyList();
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		return aMap;
	}

	public Map<String, List<A_company>> searchcode(A_company ac, String code) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_code(code);
		   List<A_company> aList = aDao.getsearchCode(ac);
		   if(aList!=null) {
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		   }
	return aMap;
}

	public Map<String, List<A_company>> deleteCom(int cnt, String[] strArray) {
		Map<String, List<A_company>> aMap=null;
		boolean result=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result=aDao.deleteCom(code);
		}
		if(result) {
			List<A_company> aList = aDao.getCompanyList();
			aMap=new HashMap<>();
			   aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saleinsert(HttpServletRequest request, SaleInfo si, HttpSession session) {
		String view=null;
		boolean a=false;
		boolean b= false;
		mav= new ModelAndView();
		A_company ac = new A_company();
		ac = aDao.getcomcode(si.getS_comnum());
		si.setS_clcode(ac.getCl_code());
		si.setS_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("s_pkind");
		String [] strcnt=request.getParameterValues("s_cnt");
		String [] strprice=request.getParameterValues("s_price");
		String [] strprice2=request.getParameterValues("s_price2");
		String [] strtax=request.getParameterValues("s_tax");
		String [] strtotal=request.getParameterValues("s_total");
		String [] strmemo=request.getParameterValues("s_memo");
		     	a = aDao.saleinsert(si);
		if(a && b) {
			    mav.addObject("msg","전표등록성공");
			    view="Account/openTable";
			}else {
				mav.addObject("msg","전표등록실패");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getsaleList() {
		Map<String, List<SaleInfo>> aMap=null;
		   List<SaleInfo> sList1 = aDao.getsaleList();
		   //List<SaleInfo> sList2 = aDao.getsaleList2();
		   if(sList1!=null) {
			   aMap=new HashMap<>();
			   aMap.put("sList1", sList1);
		   }else {
			   aMap=null;
		   }
		   //aMap.put("sList2", sList2);
	return aMap;
}

	public Map<String, List<SaleInfo>> getList(String code) {
		System.out.println(code);
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList = aDao.getList(code);
		if(sList!=null){
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}
		return sMap;
	}

	public ModelAndView getTaxbill(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();
		if(check!=null) {
			if(check.contains("S")) {
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				ac=aDao.getcomInfo(company);
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/taxbillS";

			}else {
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				mc=aDao.getmyCompany();
				ac=aDao.getcomInfo(company);
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				mav.addObject("msg","세금계산서 등록");
				view="Account/taxbillP";
			}
			}else {
				mav.addObject("msg","선택한 항목이없습니다");
				view="Account/openTable";
			}
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> deleteSale(int cnt, String[] strArray) {
		Map<String, List<SaleInfo>> aMap=null;
		boolean result=false;
		boolean result2=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result2=aDao.deleteSale2(code);
			result=aDao.deleteSale(code);
		}
		if(result && result2) {
			List<SaleInfo> sList = aDao.getsaleList();
			aMap=new HashMap<>();
			   aMap.put("sList", sList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saledetails(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();
<<<<<<< HEAD

		if(check!=null) {
				List<SaleInfo> tList = new ArrayList<>();
				tList=aDao.getTaxbill(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				myCompany mc = new myCompany();
=======
		
		if(check!=null) {
				List<SaleInfo> tList = new ArrayList<>();
				tList=aDao.getTaxbill(check); 
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				myCompany mc = new myCompany(); 
>>>>>>> origin/JSJ
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("tList",tList);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/saledetails";
			}else {
<<<<<<< HEAD

			    mav.addObject("msg","매출만 거래명세서를 볼수 있습니다");
				view="Account/openTable";
			}

=======
				
			    mav.addObject("msg","매출만 거래명세서를 볼수 있습니다");
				view="Account/openTable";
			}
		
>>>>>>> origin/JSJ
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView acApproval(String check) {
		mav= new ModelAndView();
		String view ="";
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/acApproval";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView approvalLine() {
		String view=null;
		mav= new ModelAndView();
		List<approvalLine> aList = null;
<<<<<<< HEAD
		aList=aDao.approvalLine();
=======
		aList=aDao.approvalLine(); 
>>>>>>> origin/JSJ
		if(aList.size()!=0) {
				mav.addObject("aList",new Gson().toJson(aList));
				view="Account/approvalLine";
			}else {
<<<<<<< HEAD

			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}

=======
				
			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}
		
>>>>>>> origin/JSJ
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<approvalLine>> searchName(String name) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList=null;
		if(name!=null) {
			aList = aDao.searchName(name);
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> addApproval(int cnt, String[] strArray) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList= new ArrayList<>();
		System.out.println("숫자="+cnt);
		System.out.println("이름값="+strArray.length);
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		String code="";
		approvalLine al = new approvalLine();
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			al=aDao.addApproval(code);
		    aList.add(al);
		}
		if(aList!=null) {
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> approLinecom(String[] code01) {
		Map<String, List<approvalLine>> aMap=null;
		System.out.println(code01.length);
		//System.out.println(code02[0]);
<<<<<<< HEAD

		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();

				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]);
=======
		
		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();
				
				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]); 
>>>>>>> origin/JSJ
					tList1.add(al);
				}
//				for(int i=0; i<code02.length; i++) {
//					approvalLine al = new approvalLine();
<<<<<<< HEAD
//					al=aDao.approLinecom2(code02[i]);
=======
//					al=aDao.approLinecom2(code02[i]); 
>>>>>>> origin/JSJ
//					tList2.add(al);
//				}
				aMap=new HashMap<>();
				System.out.println(tList1);
				aMap.put("tList1",tList1);
				//aMap.put("tList2",tList2);
			}else {
<<<<<<< HEAD

				aMap=null;;
			}

		return aMap;


=======
				
				aMap=null;;
			}
		
		return aMap;
	
	
>>>>>>> origin/JSJ
	}

	public ModelAndView approdocument(HttpServletRequest request, ApprovalDocument ad, HttpSession session) {
		String view=null;
		mav= new ModelAndView();
		boolean a=false;
		boolean b=false;
		boolean c=false;
		A_company ac = new A_company();
		ac = aDao.getcomcode(ad.getRs_comnum());
		ad.setRs_clcode(ac.getCl_code());
		ad.setRs_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("rs_pkind");
		String [] strcnt=request.getParameterValues("rs_cnt");
		String [] strprice=request.getParameterValues("rs_price");
		String [] strprice2=request.getParameterValues("rs_price2");
		String [] strtax=request.getParameterValues("rs_tax");
		String [] strtotal=request.getParameterValues("rs_total");
		String [] strmemo=request.getParameterValues("rs_memo");
		 		a = aDao.approvaldocu(ad);
		     	b = aDao.approdocument(ad);
<<<<<<< HEAD

=======
		     	
>>>>>>> origin/JSJ
		for(int i=0; i<strpkind.length; i++) {
			ad.setRs_pkind(strpkind[i]);
			ad.setRs_cnt(strcnt[i]);
			ad.setRs_price(strprice[i]);
			ad.setRs_price2(strprice2[i]);
			ad.setRs_tax(strtax[i]);
			ad.setRs_total(strtotal[i]);
			ad.setRs_memo(strmemo[i]);
			 	c=aDao.approdocument2(ad);
		}
		if(a && b && c) {
			//aDao.saleListDelete(ad);
			mav.addObject("num","1");
				view="Account/openTable";
			}else {
				mav.addObject("num","0");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getpkind(String pkind) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
		//SaleInfo si = new SaleInfo();
		sList=aDao.getpkind(pkind);
		//sList.add(si);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

	public ModelAndView SaleDetaile(String check) {
		String view=null;
		mav= new ModelAndView();
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/SaleDetaile";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="Account/opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> selectSearch(String select, String choice) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		sList=aDao.selectSreach(select,choice);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

<<<<<<< HEAD
	public Map<String, List<ApprovalDocu>> comparecode(String code) {
		Map<String, List<ApprovalDocu>> sMap=null;
		List<ApprovalDocu> sList=null;

=======
	public Map<String, List<Approvaldocu>> comparecode(String code) {
		Map<String, List<Approvaldocu>> sMap=null;
		List<Approvaldocu> sList=null;
		
>>>>>>> origin/JSJ
		sList=aDao.comparecode(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
<<<<<<< HEAD

	public Map<String, List<approvalLine>> getMyInfo(HttpSession session) {
		Map<String, List<approvalLine>> sMap=null;
		List<approvalLine> sList=null;
		String code = session.getAttribute("hrCode").toString();
		sList=aDao.getMyInfo(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
}
=======
}
>>>>>>> origin/JSJ

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-09-19 15:06:57.507
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-09-19 15:06:57.507
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-09-19 15:06:59.117
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.n7.erp.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.ModelAndView;
import com.n7.erp.dao.AccountDao;
import com.google.gson.Gson;
import com.n7.erp.bean.ac.A_company;
import com.n7.erp.bean.ac.ApprovalDocument;
<<<<<<< HEAD
import com.n7.erp.bean.ApprovalDocu;
=======
import com.n7.erp.bean.ac.Approvaldocu;
>>>>>>> origin/JSJ
import com.n7.erp.bean.ac.SaleInfo;
import com.n7.erp.bean.ac.myCompany;
import com.n7.erp.bean.ac.approvalLine;



@Component
public class AccountMM {

	@Autowired
	AccountDao aDao;

	ModelAndView mav;

	public Map<String, List<A_company>> insertcomlist(A_company ac, HttpSession session) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_ccode(session.getAttribute("cCode").toString());
		if(ac.getCl_code()!="") {
			if(aDao.insertcomlist(ac)) {
			   List<A_company> aList = aDao.getComList(ac.getCl_code());
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
			}else {
				aMap=null;
			}
		}else {
			List<A_company> aList = aDao.getComList(ac.getCl_code());
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}
		return aMap;
	}

	public Map<String, List<A_company>> serchcomlist() {
		Map<String, List<A_company>> aMap=null;
			   List<A_company> aList = aDao.getCompanyList();
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		return aMap;
	}

	public Map<String, List<A_company>> searchcode(A_company ac, String code) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_code(code);
		   List<A_company> aList = aDao.getsearchCode(ac);
		   if(aList!=null) {
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		   }
	return aMap;
}

	public Map<String, List<A_company>> deleteCom(int cnt, String[] strArray) {
		Map<String, List<A_company>> aMap=null;
		boolean result=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result=aDao.deleteCom(code);
		}
		if(result) {
			List<A_company> aList = aDao.getCompanyList();
			aMap=new HashMap<>();
			   aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saleinsert(HttpServletRequest request, SaleInfo si, HttpSession session) {
		String view=null;
		boolean a=false;
		boolean b= false;
		mav= new ModelAndView();
		A_company ac = new A_company();
		ac = aDao.getcomcode(si.getS_comnum());
		si.setS_clcode(ac.getCl_code());
		si.setS_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("s_pkind");
		String [] strcnt=request.getParameterValues("s_cnt");
		String [] strprice=request.getParameterValues("s_price");
		String [] strprice2=request.getParameterValues("s_price2");
		String [] strtax=request.getParameterValues("s_tax");
		String [] strtotal=request.getParameterValues("s_total");
		String [] strmemo=request.getParameterValues("s_memo");
		     	a = aDao.saleinsert(si);
		if(a && b) {
			    mav.addObject("msg","전표등록성공");
			    view="Account/openTable";
			}else {
				mav.addObject("msg","전표등록실패");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getsaleList() {
		Map<String, List<SaleInfo>> aMap=null;
		   List<SaleInfo> sList1 = aDao.getsaleList();
		   //List<SaleInfo> sList2 = aDao.getsaleList2();
		   if(sList1!=null) {
			   aMap=new HashMap<>();
			   aMap.put("sList1", sList1);
		   }else {
			   aMap=null;
		   }
		   //aMap.put("sList2", sList2);
	return aMap;
}

	public Map<String, List<SaleInfo>> getList(String code) {
		System.out.println(code);
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList = aDao.getList(code);
		if(sList!=null){
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}
		return sMap;
	}

	public ModelAndView getTaxbill(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();
		if(check!=null) {
			if(check.contains("S")) {
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				ac=aDao.getcomInfo(company);
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/taxbillS";

			}else {
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				mc=aDao.getmyCompany();
				ac=aDao.getcomInfo(company);
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				mav.addObject("msg","세금계산서 등록");
				view="Account/taxbillP";
			}
			}else {
				mav.addObject("msg","선택한 항목이없습니다");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> deleteSale(int cnt, String[] strArray) {
		Map<String, List<SaleInfo>> aMap=null;
		boolean result=false;
		boolean result2=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result2=aDao.deleteSale2(code);
			result=aDao.deleteSale(code);
		}
		if(result && result2) {
			List<SaleInfo> sList = aDao.getsaleList();
			aMap=new HashMap<>();
			   aMap.put("sList", sList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saledetails(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();
<<<<<<< HEAD

		if(check!=null) {
				List<SaleInfo> tList = new ArrayList<>();
				tList=aDao.getTaxbill(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				myCompany mc = new myCompany();
=======
		
		if(check!=null) {
				List<SaleInfo> tList = new ArrayList<>();
				tList=aDao.getTaxbill(check); 
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				myCompany mc = new myCompany(); 
>>>>>>> origin/JSJ
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("tList",tList);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/saledetails";
			}else {
<<<<<<< HEAD

			    mav.addObject("msg","매출만 거래명세서를 볼수 있습니다");
				view="Account/openTable";
			}

=======
				
			    mav.addObject("msg","매출만 거래명세서를 볼수 있습니다");
				view="Account/openTable";
			}
		
>>>>>>> origin/JSJ
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView acApproval(String check) {
		mav= new ModelAndView();
		String view ="";
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/acApproval";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView approvalLine() {
		String view=null;
		mav= new ModelAndView();
		List<approvalLine> aList = null;
<<<<<<< HEAD
		aList=aDao.approvalLine();
=======
		aList=aDao.approvalLine(); 
>>>>>>> origin/JSJ
		if(aList.size()!=0) {
				mav.addObject("aList",new Gson().toJson(aList));
				view="Account/approvalLine";
			}else {
<<<<<<< HEAD

			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}

=======
				
			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}
		
>>>>>>> origin/JSJ
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<approvalLine>> searchName(String name) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList=null;
		if(name!=null) {
			aList = aDao.searchName(name);
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> addApproval(int cnt, String[] strArray) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList= new ArrayList<>();
		System.out.println("숫자="+cnt);
		System.out.println("이름값="+strArray.length);
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		String code="";
		approvalLine al = new approvalLine();
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			al=aDao.addApproval(code);
		    aList.add(al);
		}
		if(aList!=null) {
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> approLinecom(String[] code01) {
		Map<String, List<approvalLine>> aMap=null;
		System.out.println(code01.length);
		//System.out.println(code02[0]);
<<<<<<< HEAD

		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();

				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]);
=======
		
		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();
				
				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]); 
>>>>>>> origin/JSJ
					tList1.add(al);
				}
//				for(int i=0; i<code02.length; i++) {
//					approvalLine al = new approvalLine();
<<<<<<< HEAD
//					al=aDao.approLinecom2(code02[i]);
=======
//					al=aDao.approLinecom2(code02[i]); 
>>>>>>> origin/JSJ
//					tList2.add(al);
//				}
				aMap=new HashMap<>();
				System.out.println(tList1);
				aMap.put("tList1",tList1);
				//aMap.put("tList2",tList2);
			}else {
<<<<<<< HEAD

				aMap=null;;
			}

		return aMap;


=======
				
				aMap=null;;
			}
		
		return aMap;
	
	
>>>>>>> origin/JSJ
	}

	public ModelAndView approdocument(HttpServletRequest request, ApprovalDocument ad, HttpSession session) {
		String view=null;
		mav= new ModelAndView();
		boolean a=false;
		boolean b=false;
		boolean c=false;
		A_company ac = new A_company();
		ac = aDao.getcomcode(ad.getRs_comnum());
		ad.setRs_clcode(ac.getCl_code());
		ad.setRs_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("rs_pkind");
		String [] strcnt=request.getParameterValues("rs_cnt");
		String [] strprice=request.getParameterValues("rs_price");
		String [] strprice2=request.getParameterValues("rs_price2");
		String [] strtax=request.getParameterValues("rs_tax");
		String [] strtotal=request.getParameterValues("rs_total");
		String [] strmemo=request.getParameterValues("rs_memo");
		 		a = aDao.approvaldocu(ad);
		     	b = aDao.approdocument(ad);
<<<<<<< HEAD

=======
		     	
>>>>>>> origin/JSJ
		for(int i=0; i<strpkind.length; i++) {
			ad.setRs_pkind(strpkind[i]);
			ad.setRs_cnt(strcnt[i]);
			ad.setRs_price(strprice[i]);
			ad.setRs_price2(strprice2[i]);
			ad.setRs_tax(strtax[i]);
			ad.setRs_total(strtotal[i]);
			ad.setRs_memo(strmemo[i]);
			 	c=aDao.approdocument2(ad);
		}
		if(a && b && c) {
			//aDao.saleListDelete(ad);
			mav.addObject("num","1");
				view="Account/openTable";
			}else {
				mav.addObject("num","0");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getpkind(String pkind) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
		//SaleInfo si = new SaleInfo();
		sList=aDao.getpkind(pkind);
		//sList.add(si);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

	public ModelAndView SaleDetaile(String check) {
		String view=null;
		mav= new ModelAndView();
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/SaleDetaile";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="Account/opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> selectSearch(String select, String choice) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		sList=aDao.selectSreach(select,choice);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

<<<<<<< HEAD
	public Map<String, List<ApprovalDocu>> comparecode(String code) {
		Map<String, List<ApprovalDocu>> sMap=null;
		List<ApprovalDocu> sList=null;

=======
	public Map<String, List<Approvaldocu>> comparecode(String code) {
		Map<String, List<Approvaldocu>> sMap=null;
		List<Approvaldocu> sList=null;
		
>>>>>>> origin/JSJ
		sList=aDao.comparecode(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
<<<<<<< HEAD

	public Map<String, List<approvalLine>> getMyInfo(HttpSession session) {
		Map<String, List<approvalLine>> sMap=null;
		List<approvalLine> sList=null;
		String code = session.getAttribute("hrCode").toString();
		sList=aDao.getMyInfo(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
}
=======
}
>>>>>>> origin/JSJ

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-09-19 15:06:59.133
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-09-19 15:06:59.133
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-09-19 15:07:02.321
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.n7.erp.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.ModelAndView;
import com.n7.erp.dao.AccountDao;
import com.google.gson.Gson;
import com.n7.erp.bean.ac.A_company;
import com.n7.erp.bean.ac.ApprovalDocument;
<<<<<<< HEAD
import com.n7.erp.bean.ApprovalDocu;
=======
import com.n7.erp.bean.ac.Approvaldocu;
>>>>>>> origin/JSJ
import com.n7.erp.bean.ac.SaleInfo;
import com.n7.erp.bean.ac.myCompany;
import com.n7.erp.bean.ac.approvalLine;



@Component
public class AccountMM {

	@Autowired
	AccountDao aDao;

	ModelAndView mav;

	public Map<String, List<A_company>> insertcomlist(A_company ac, HttpSession session) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_ccode(session.getAttribute("cCode").toString());
		if(ac.getCl_code()!="") {
			if(aDao.insertcomlist(ac)) {
			   List<A_company> aList = aDao.getComList(ac.getCl_code());
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
			}else {
				aMap=null;
			}
		}else {
			List<A_company> aList = aDao.getComList(ac.getCl_code());
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}
		return aMap;
	}

	public Map<String, List<A_company>> serchcomlist() {
		Map<String, List<A_company>> aMap=null;
			   List<A_company> aList = aDao.getCompanyList();
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		return aMap;
	}

	public Map<String, List<A_company>> searchcode(A_company ac, String code) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_code(code);
		   List<A_company> aList = aDao.getsearchCode(ac);
		   if(aList!=null) {
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		   }
	return aMap;
}

	public Map<String, List<A_company>> deleteCom(int cnt, String[] strArray) {
		Map<String, List<A_company>> aMap=null;
		boolean result=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result=aDao.deleteCom(code);
		}
		if(result) {
			List<A_company> aList = aDao.getCompanyList();
			aMap=new HashMap<>();
			   aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saleinsert(HttpServletRequest request, SaleInfo si, HttpSession session) {
		String view=null;
		boolean a=false;
		boolean b= false;
		mav= new ModelAndView();
		A_company ac = new A_company();
		ac = aDao.getcomcode(si.getS_comnum());
		si.setS_clcode(ac.getCl_code());
		si.setS_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("s_pkind");
		String [] strcnt=request.getParameterValues("s_cnt");
		String [] strprice=request.getParameterValues("s_price");
		String [] strprice2=request.getParameterValues("s_price2");
		String [] strtax=request.getParameterValues("s_tax");
		String [] strtotal=request.getParameterValues("s_total");
		String [] strmemo=request.getParameterValues("s_memo");
		     	a = aDao.saleinsert(si);
		if(a && b) {
			    mav.addObject("msg","전표등록성공");
			    view="Account/openTable";
			}else {
				mav.addObject("msg","전표등록실패");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getsaleList() {
		Map<String, List<SaleInfo>> aMap=null;
		   List<SaleInfo> sList1 = aDao.getsaleList();
		   //List<SaleInfo> sList2 = aDao.getsaleList2();
		   if(sList1!=null) {
			   aMap=new HashMap<>();
			   aMap.put("sList1", sList1);
		   }else {
			   aMap=null;
		   }
		   //aMap.put("sList2", sList2);
	return aMap;
}

	public Map<String, List<SaleInfo>> getList(String code) {
		System.out.println(code);
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList = aDao.getList(code);
		if(sList!=null){
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}
		return sMap;
	}

	public ModelAndView getTaxbill(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();
		if(check!=null) {
			if(check.contains("S")) {
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				ac=aDao.getcomInfo(company);
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/taxbillS";

			}else {
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				mc=aDao.getmyCompany();
				ac=aDao.getcomInfo(company);
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				mav.addObject("msg","세금계산서 등록");
				view="Account/taxbillP";
			}
			}else {
				mav.addObject("msg","선택한 항목이없습니다");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> deleteSale(int cnt, String[] strArray) {
		Map<String, List<SaleInfo>> aMap=null;
		boolean result=false;
		boolean result2=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result2=aDao.deleteSale2(code);
			result=aDao.deleteSale(code);
		}
		if(result && result2) {
			List<SaleInfo> sList = aDao.getsaleList();
			aMap=new HashMap<>();
			   aMap.put("sList", sList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saledetails(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();

		if(check!=null) {
				List<SaleInfo> tList = new ArrayList<>();
				tList=aDao.getTaxbill(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				myCompany mc = new myCompany();
=======
		
		if(check!=null) {
				List<SaleInfo> tList = new ArrayList<>();
				tList=aDao.getTaxbill(check); 
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				myCompany mc = new myCompany(); 
>>>>>>> origin/JSJ
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("tList",tList);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/saledetails";
			}else {
<<<<<<< HEAD

			    mav.addObject("msg","매출만 거래명세서를 볼수 있습니다");
				view="Account/openTable";
			}

=======
				
			    mav.addObject("msg","매출만 거래명세서를 볼수 있습니다");
				view="Account/openTable";
			}
		
>>>>>>> origin/JSJ
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView acApproval(String check) {
		mav= new ModelAndView();
		String view ="";
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/acApproval";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView approvalLine() {
		String view=null;
		mav= new ModelAndView();
		List<approvalLine> aList = null;
<<<<<<< HEAD
		aList=aDao.approvalLine();
=======
		aList=aDao.approvalLine(); 
>>>>>>> origin/JSJ
		if(aList.size()!=0) {
				mav.addObject("aList",new Gson().toJson(aList));
				view="Account/approvalLine";
			}else {
<<<<<<< HEAD

			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}

=======
				
			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}
		
>>>>>>> origin/JSJ
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<approvalLine>> searchName(String name) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList=null;
		if(name!=null) {
			aList = aDao.searchName(name);
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> addApproval(int cnt, String[] strArray) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList= new ArrayList<>();
		System.out.println("숫자="+cnt);
		System.out.println("이름값="+strArray.length);
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		String code="";
		approvalLine al = new approvalLine();
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			al=aDao.addApproval(code);
		    aList.add(al);
		}
		if(aList!=null) {
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> approLinecom(String[] code01) {
		Map<String, List<approvalLine>> aMap=null;
		System.out.println(code01.length);
		//System.out.println(code02[0]);
<<<<<<< HEAD

		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();

				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]);
=======
		
		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();
				
				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]); 
>>>>>>> origin/JSJ
					tList1.add(al);
				}
//				for(int i=0; i<code02.length; i++) {
//					approvalLine al = new approvalLine();
<<<<<<< HEAD
//					al=aDao.approLinecom2(code02[i]);
=======
//					al=aDao.approLinecom2(code02[i]); 
>>>>>>> origin/JSJ
//					tList2.add(al);
//				}
				aMap=new HashMap<>();
				System.out.println(tList1);
				aMap.put("tList1",tList1);
				//aMap.put("tList2",tList2);
			}else {
<<<<<<< HEAD

				aMap=null;;
			}

		return aMap;


=======
				
				aMap=null;;
			}
		
		return aMap;
	
	
>>>>>>> origin/JSJ
	}

	public ModelAndView approdocument(HttpServletRequest request, ApprovalDocument ad, HttpSession session) {
		String view=null;
		mav= new ModelAndView();
		boolean a=false;
		boolean b=false;
		boolean c=false;
		A_company ac = new A_company();
		ac = aDao.getcomcode(ad.getRs_comnum());
		ad.setRs_clcode(ac.getCl_code());
		ad.setRs_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("rs_pkind");
		String [] strcnt=request.getParameterValues("rs_cnt");
		String [] strprice=request.getParameterValues("rs_price");
		String [] strprice2=request.getParameterValues("rs_price2");
		String [] strtax=request.getParameterValues("rs_tax");
		String [] strtotal=request.getParameterValues("rs_total");
		String [] strmemo=request.getParameterValues("rs_memo");
		 		a = aDao.approvaldocu(ad);
		     	b = aDao.approdocument(ad);
<<<<<<< HEAD

=======
		     	
>>>>>>> origin/JSJ
		for(int i=0; i<strpkind.length; i++) {
			ad.setRs_pkind(strpkind[i]);
			ad.setRs_cnt(strcnt[i]);
			ad.setRs_price(strprice[i]);
			ad.setRs_price2(strprice2[i]);
			ad.setRs_tax(strtax[i]);
			ad.setRs_total(strtotal[i]);
			ad.setRs_memo(strmemo[i]);
			 	c=aDao.approdocument2(ad);
		}
		if(a && b && c) {
			//aDao.saleListDelete(ad);
			mav.addObject("num","1");
				view="Account/openTable";
			}else {
				mav.addObject("num","0");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getpkind(String pkind) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
		//SaleInfo si = new SaleInfo();
		sList=aDao.getpkind(pkind);
		//sList.add(si);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

	public ModelAndView SaleDetaile(String check) {
		String view=null;
		mav= new ModelAndView();
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/SaleDetaile";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="Account/opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> selectSearch(String select, String choice) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		sList=aDao.selectSreach(select,choice);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

<<<<<<< HEAD
	public Map<String, List<ApprovalDocu>> comparecode(String code) {
		Map<String, List<ApprovalDocu>> sMap=null;
		List<ApprovalDocu> sList=null;

=======
	public Map<String, List<Approvaldocu>> comparecode(String code) {
		Map<String, List<Approvaldocu>> sMap=null;
		List<Approvaldocu> sList=null;
		
>>>>>>> origin/JSJ
		sList=aDao.comparecode(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
<<<<<<< HEAD

	public Map<String, List<approvalLine>> getMyInfo(HttpSession session) {
		Map<String, List<approvalLine>> sMap=null;
		List<approvalLine> sList=null;
		String code = session.getAttribute("hrCode").toString();
		sList=aDao.getMyInfo(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
}
=======
}
>>>>>>> origin/JSJ

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-09-19 15:07:02.336
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-09-19 15:07:02.336
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-09-19 15:07:05.524
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.n7.erp.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.ModelAndView;
import com.n7.erp.dao.AccountDao;
import com.google.gson.Gson;
import com.n7.erp.bean.ac.A_company;
import com.n7.erp.bean.ac.ApprovalDocument;
<<<<<<< HEAD
import com.n7.erp.bean.ApprovalDocu;
=======
import com.n7.erp.bean.ac.Approvaldocu;
>>>>>>> origin/JSJ
import com.n7.erp.bean.ac.SaleInfo;
import com.n7.erp.bean.ac.myCompany;
import com.n7.erp.bean.ac.approvalLine;



@Component
public class AccountMM {

	@Autowired
	AccountDao aDao;

	ModelAndView mav;

	public Map<String, List<A_company>> insertcomlist(A_company ac, HttpSession session) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_ccode(session.getAttribute("cCode").toString());
		if(ac.getCl_code()!="") {
			if(aDao.insertcomlist(ac)) {
			   List<A_company> aList = aDao.getComList(ac.getCl_code());
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
			}else {
				aMap=null;
			}
		}else {
			List<A_company> aList = aDao.getComList(ac.getCl_code());
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}
		return aMap;
	}

	public Map<String, List<A_company>> serchcomlist() {
		Map<String, List<A_company>> aMap=null;
			   List<A_company> aList = aDao.getCompanyList();
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		return aMap;
	}

	public Map<String, List<A_company>> searchcode(A_company ac, String code) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_code(code);
		   List<A_company> aList = aDao.getsearchCode(ac);
		   if(aList!=null) {
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		   }
	return aMap;
}

	public Map<String, List<A_company>> deleteCom(int cnt, String[] strArray) {
		Map<String, List<A_company>> aMap=null;
		boolean result=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result=aDao.deleteCom(code);
		}
		if(result) {
			List<A_company> aList = aDao.getCompanyList();
			aMap=new HashMap<>();
			   aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saleinsert(HttpServletRequest request, SaleInfo si, HttpSession session) {
		String view=null;
		boolean a=false;
		boolean b= false;
		mav= new ModelAndView();
		A_company ac = new A_company();
		ac = aDao.getcomcode(si.getS_comnum());
		si.setS_clcode(ac.getCl_code());
		si.setS_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("s_pkind");
		String [] strcnt=request.getParameterValues("s_cnt");
		String [] strprice=request.getParameterValues("s_price");
		String [] strprice2=request.getParameterValues("s_price2");
		String [] strtax=request.getParameterValues("s_tax");
		String [] strtotal=request.getParameterValues("s_total");
		String [] strmemo=request.getParameterValues("s_memo");
		     	a = aDao.saleinsert(si);
		if(a && b) {
			    mav.addObject("msg","전표등록성공");
			    view="Account/openTable";
			}else {
				mav.addObject("msg","전표등록실패");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getsaleList() {
		Map<String, List<SaleInfo>> aMap=null;
		   List<SaleInfo> sList1 = aDao.getsaleList();
		   //List<SaleInfo> sList2 = aDao.getsaleList2();
		   if(sList1!=null) {
			   aMap=new HashMap<>();
			   aMap.put("sList1", sList1);
		   }else {
			   aMap=null;
		   }
		   //aMap.put("sList2", sList2);
	return aMap;
}

	public Map<String, List<SaleInfo>> getList(String code) {
		System.out.println(code);
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList = aDao.getList(code);
		if(sList!=null){
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}
		return sMap;
	}

	public ModelAndView getTaxbill(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();
		if(check!=null) {
			if(check.contains("S")) {
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				ac=aDao.getcomInfo(company);
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/taxbillS";

			}else {
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				mc=aDao.getmyCompany();
				ac=aDao.getcomInfo(company);
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				mav.addObject("msg","세금계산서 등록");
				view="Account/taxbillP";
			}
			}else {
				mav.addObject("msg","선택한 항목이없습니다");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> deleteSale(int cnt, String[] strArray) {
		Map<String, List<SaleInfo>> aMap=null;
		boolean result=false;
		boolean result2=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result2=aDao.deleteSale2(code);
			result=aDao.deleteSale(code);
		}
		if(result && result2) {
			List<SaleInfo> sList = aDao.getsaleList();
			aMap=new HashMap<>();
			   aMap.put("sList", sList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saledetails(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();

		if(check!=null) {
				List<SaleInfo> tList = new ArrayList<>();
				tList=aDao.getTaxbill(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				myCompany mc = new myCompany();
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("tList",tList);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/saledetails";
			}else {
<<<<<<< HEAD

			    mav.addObject("msg","매출만 거래명세서를 볼수 있습니다");
				view="Account/openTable";
			}

=======
				
			    mav.addObject("msg","매출만 거래명세서를 볼수 있습니다");
				view="Account/openTable";
			}
		
>>>>>>> origin/JSJ
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView acApproval(String check) {
		mav= new ModelAndView();
		String view ="";
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/acApproval";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView approvalLine() {
		String view=null;
		mav= new ModelAndView();
		List<approvalLine> aList = null;
<<<<<<< HEAD
		aList=aDao.approvalLine();
=======
		aList=aDao.approvalLine(); 
>>>>>>> origin/JSJ
		if(aList.size()!=0) {
				mav.addObject("aList",new Gson().toJson(aList));
				view="Account/approvalLine";
			}else {
<<<<<<< HEAD

			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}

=======
				
			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}
		
>>>>>>> origin/JSJ
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<approvalLine>> searchName(String name) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList=null;
		if(name!=null) {
			aList = aDao.searchName(name);
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> addApproval(int cnt, String[] strArray) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList= new ArrayList<>();
		System.out.println("숫자="+cnt);
		System.out.println("이름값="+strArray.length);
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		String code="";
		approvalLine al = new approvalLine();
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			al=aDao.addApproval(code);
		    aList.add(al);
		}
		if(aList!=null) {
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> approLinecom(String[] code01) {
		Map<String, List<approvalLine>> aMap=null;
		System.out.println(code01.length);
		//System.out.println(code02[0]);
<<<<<<< HEAD

		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();

				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]);
=======
		
		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();
				
				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]); 
>>>>>>> origin/JSJ
					tList1.add(al);
				}
//				for(int i=0; i<code02.length; i++) {
//					approvalLine al = new approvalLine();
<<<<<<< HEAD
//					al=aDao.approLinecom2(code02[i]);
=======
//					al=aDao.approLinecom2(code02[i]); 
>>>>>>> origin/JSJ
//					tList2.add(al);
//				}
				aMap=new HashMap<>();
				System.out.println(tList1);
				aMap.put("tList1",tList1);
				//aMap.put("tList2",tList2);
			}else {
<<<<<<< HEAD

				aMap=null;;
			}

		return aMap;


=======
				
				aMap=null;;
			}
		
		return aMap;
	
	
>>>>>>> origin/JSJ
	}

	public ModelAndView approdocument(HttpServletRequest request, ApprovalDocument ad, HttpSession session) {
		String view=null;
		mav= new ModelAndView();
		boolean a=false;
		boolean b=false;
		boolean c=false;
		A_company ac = new A_company();
		ac = aDao.getcomcode(ad.getRs_comnum());
		ad.setRs_clcode(ac.getCl_code());
		ad.setRs_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("rs_pkind");
		String [] strcnt=request.getParameterValues("rs_cnt");
		String [] strprice=request.getParameterValues("rs_price");
		String [] strprice2=request.getParameterValues("rs_price2");
		String [] strtax=request.getParameterValues("rs_tax");
		String [] strtotal=request.getParameterValues("rs_total");
		String [] strmemo=request.getParameterValues("rs_memo");
		 		a = aDao.approvaldocu(ad);
		     	b = aDao.approdocument(ad);
<<<<<<< HEAD

=======
		     	
>>>>>>> origin/JSJ
		for(int i=0; i<strpkind.length; i++) {
			ad.setRs_pkind(strpkind[i]);
			ad.setRs_cnt(strcnt[i]);
			ad.setRs_price(strprice[i]);
			ad.setRs_price2(strprice2[i]);
			ad.setRs_tax(strtax[i]);
			ad.setRs_total(strtotal[i]);
			ad.setRs_memo(strmemo[i]);
			 	c=aDao.approdocument2(ad);
		}
		if(a && b && c) {
			//aDao.saleListDelete(ad);
			mav.addObject("num","1");
				view="Account/openTable";
			}else {
				mav.addObject("num","0");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getpkind(String pkind) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
		//SaleInfo si = new SaleInfo();
		sList=aDao.getpkind(pkind);
		//sList.add(si);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

	public ModelAndView SaleDetaile(String check) {
		String view=null;
		mav= new ModelAndView();
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/SaleDetaile";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="Account/opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> selectSearch(String select, String choice) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		sList=aDao.selectSreach(select,choice);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

<<<<<<< HEAD
	public Map<String, List<ApprovalDocu>> comparecode(String code) {
		Map<String, List<ApprovalDocu>> sMap=null;
		List<ApprovalDocu> sList=null;

=======
	public Map<String, List<Approvaldocu>> comparecode(String code) {
		Map<String, List<Approvaldocu>> sMap=null;
		List<Approvaldocu> sList=null;
		
>>>>>>> origin/JSJ
		sList=aDao.comparecode(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
<<<<<<< HEAD

	public Map<String, List<approvalLine>> getMyInfo(HttpSession session) {
		Map<String, List<approvalLine>> sMap=null;
		List<approvalLine> sList=null;
		String code = session.getAttribute("hrCode").toString();
		sList=aDao.getMyInfo(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
}
=======
}
>>>>>>> origin/JSJ

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-09-19 15:07:05.540
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-09-19 15:07:05.556
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-09-19 15:07:07.165
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.n7.erp.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.ModelAndView;
import com.n7.erp.dao.AccountDao;
import com.google.gson.Gson;
import com.n7.erp.bean.ac.A_company;
import com.n7.erp.bean.ac.ApprovalDocument;
<<<<<<< HEAD
import com.n7.erp.bean.ApprovalDocu;
=======
import com.n7.erp.bean.ac.Approvaldocu;
>>>>>>> origin/JSJ
import com.n7.erp.bean.ac.SaleInfo;
import com.n7.erp.bean.ac.myCompany;
import com.n7.erp.bean.ac.approvalLine;



@Component
public class AccountMM {

	@Autowired
	AccountDao aDao;

	ModelAndView mav;

	public Map<String, List<A_company>> insertcomlist(A_company ac, HttpSession session) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_ccode(session.getAttribute("cCode").toString());
		if(ac.getCl_code()!="") {
			if(aDao.insertcomlist(ac)) {
			   List<A_company> aList = aDao.getComList(ac.getCl_code());
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
			}else {
				aMap=null;
			}
		}else {
			List<A_company> aList = aDao.getComList(ac.getCl_code());
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}
		return aMap;
	}

	public Map<String, List<A_company>> serchcomlist() {
		Map<String, List<A_company>> aMap=null;
			   List<A_company> aList = aDao.getCompanyList();
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		return aMap;
	}

	public Map<String, List<A_company>> searchcode(A_company ac, String code) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_code(code);
		   List<A_company> aList = aDao.getsearchCode(ac);
		   if(aList!=null) {
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		   }
	return aMap;
}

	public Map<String, List<A_company>> deleteCom(int cnt, String[] strArray) {
		Map<String, List<A_company>> aMap=null;
		boolean result=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result=aDao.deleteCom(code);
		}
		if(result) {
			List<A_company> aList = aDao.getCompanyList();
			aMap=new HashMap<>();
			   aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saleinsert(HttpServletRequest request, SaleInfo si, HttpSession session) {
		String view=null;
		boolean a=false;
		boolean b= false;
		mav= new ModelAndView();
		A_company ac = new A_company();
		ac = aDao.getcomcode(si.getS_comnum());
		si.setS_clcode(ac.getCl_code());
		si.setS_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("s_pkind");
		String [] strcnt=request.getParameterValues("s_cnt");
		String [] strprice=request.getParameterValues("s_price");
		String [] strprice2=request.getParameterValues("s_price2");
		String [] strtax=request.getParameterValues("s_tax");
		String [] strtotal=request.getParameterValues("s_total");
		String [] strmemo=request.getParameterValues("s_memo");
		     	a = aDao.saleinsert(si);
		if(a && b) {
			    mav.addObject("msg","전표등록성공");
			    view="Account/openTable";
			}else {
				mav.addObject("msg","전표등록실패");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getsaleList() {
		Map<String, List<SaleInfo>> aMap=null;
		   List<SaleInfo> sList1 = aDao.getsaleList();
		   //List<SaleInfo> sList2 = aDao.getsaleList2();
		   if(sList1!=null) {
			   aMap=new HashMap<>();
			   aMap.put("sList1", sList1);
		   }else {
			   aMap=null;
		   }
		   //aMap.put("sList2", sList2);
	return aMap;
}

	public Map<String, List<SaleInfo>> getList(String code) {
		System.out.println(code);
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList = aDao.getList(code);
		if(sList!=null){
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}
		return sMap;
	}

	public ModelAndView getTaxbill(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();
		if(check!=null) {
			if(check.contains("S")) {
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				ac=aDao.getcomInfo(company);
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/taxbillS";

			}else {
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				mc=aDao.getmyCompany();
				ac=aDao.getcomInfo(company);
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				mav.addObject("msg","세금계산서 등록");
				view="Account/taxbillP";
			}
			}else {
				mav.addObject("msg","선택한 항목이없습니다");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> deleteSale(int cnt, String[] strArray) {
		Map<String, List<SaleInfo>> aMap=null;
		boolean result=false;
		boolean result2=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result2=aDao.deleteSale2(code);
			result=aDao.deleteSale(code);
		}
		if(result && result2) {
			List<SaleInfo> sList = aDao.getsaleList();
			aMap=new HashMap<>();
			   aMap.put("sList", sList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saledetails(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();

		if(check!=null) {
				List<SaleInfo> tList = new ArrayList<>();
				tList=aDao.getTaxbill(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				myCompany mc = new myCompany();
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("tList",tList);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/saledetails";
			}else {

			    mav.addObject("msg","매출만 거래명세서를 볼수 있습니다");
				view="Account/openTable";
			}

=======
				
			    mav.addObject("msg","매출만 거래명세서를 볼수 있습니다");
				view="Account/openTable";
			}
		
>>>>>>> origin/JSJ
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView acApproval(String check) {
		mav= new ModelAndView();
		String view ="";
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/acApproval";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView approvalLine() {
		String view=null;
		mav= new ModelAndView();
		List<approvalLine> aList = null;
<<<<<<< HEAD
		aList=aDao.approvalLine();
=======
		aList=aDao.approvalLine(); 
>>>>>>> origin/JSJ
		if(aList.size()!=0) {
				mav.addObject("aList",new Gson().toJson(aList));
				view="Account/approvalLine";
			}else {
<<<<<<< HEAD

			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}

=======
				
			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}
		
>>>>>>> origin/JSJ
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<approvalLine>> searchName(String name) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList=null;
		if(name!=null) {
			aList = aDao.searchName(name);
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> addApproval(int cnt, String[] strArray) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList= new ArrayList<>();
		System.out.println("숫자="+cnt);
		System.out.println("이름값="+strArray.length);
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		String code="";
		approvalLine al = new approvalLine();
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			al=aDao.addApproval(code);
		    aList.add(al);
		}
		if(aList!=null) {
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> approLinecom(String[] code01) {
		Map<String, List<approvalLine>> aMap=null;
		System.out.println(code01.length);
		//System.out.println(code02[0]);
<<<<<<< HEAD

		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();

				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]);
=======
		
		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();
				
				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]); 
>>>>>>> origin/JSJ
					tList1.add(al);
				}
//				for(int i=0; i<code02.length; i++) {
//					approvalLine al = new approvalLine();
<<<<<<< HEAD
//					al=aDao.approLinecom2(code02[i]);
=======
//					al=aDao.approLinecom2(code02[i]); 
>>>>>>> origin/JSJ
//					tList2.add(al);
//				}
				aMap=new HashMap<>();
				System.out.println(tList1);
				aMap.put("tList1",tList1);
				//aMap.put("tList2",tList2);
			}else {
<<<<<<< HEAD

				aMap=null;;
			}

		return aMap;


=======
				
				aMap=null;;
			}
		
		return aMap;
	
	
>>>>>>> origin/JSJ
	}

	public ModelAndView approdocument(HttpServletRequest request, ApprovalDocument ad, HttpSession session) {
		String view=null;
		mav= new ModelAndView();
		boolean a=false;
		boolean b=false;
		boolean c=false;
		A_company ac = new A_company();
		ac = aDao.getcomcode(ad.getRs_comnum());
		ad.setRs_clcode(ac.getCl_code());
		ad.setRs_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("rs_pkind");
		String [] strcnt=request.getParameterValues("rs_cnt");
		String [] strprice=request.getParameterValues("rs_price");
		String [] strprice2=request.getParameterValues("rs_price2");
		String [] strtax=request.getParameterValues("rs_tax");
		String [] strtotal=request.getParameterValues("rs_total");
		String [] strmemo=request.getParameterValues("rs_memo");
		 		a = aDao.approvaldocu(ad);
		     	b = aDao.approdocument(ad);
<<<<<<< HEAD

=======
		     	
>>>>>>> origin/JSJ
		for(int i=0; i<strpkind.length; i++) {
			ad.setRs_pkind(strpkind[i]);
			ad.setRs_cnt(strcnt[i]);
			ad.setRs_price(strprice[i]);
			ad.setRs_price2(strprice2[i]);
			ad.setRs_tax(strtax[i]);
			ad.setRs_total(strtotal[i]);
			ad.setRs_memo(strmemo[i]);
			 	c=aDao.approdocument2(ad);
		}
		if(a && b && c) {
			//aDao.saleListDelete(ad);
			mav.addObject("num","1");
				view="Account/openTable";
			}else {
				mav.addObject("num","0");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getpkind(String pkind) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
		//SaleInfo si = new SaleInfo();
		sList=aDao.getpkind(pkind);
		//sList.add(si);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

	public ModelAndView SaleDetaile(String check) {
		String view=null;
		mav= new ModelAndView();
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/SaleDetaile";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="Account/opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> selectSearch(String select, String choice) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		sList=aDao.selectSreach(select,choice);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

<<<<<<< HEAD
	public Map<String, List<ApprovalDocu>> comparecode(String code) {
		Map<String, List<ApprovalDocu>> sMap=null;
		List<ApprovalDocu> sList=null;

=======
	public Map<String, List<Approvaldocu>> comparecode(String code) {
		Map<String, List<Approvaldocu>> sMap=null;
		List<Approvaldocu> sList=null;
		
>>>>>>> origin/JSJ
		sList=aDao.comparecode(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
<<<<<<< HEAD

	public Map<String, List<approvalLine>> getMyInfo(HttpSession session) {
		Map<String, List<approvalLine>> sMap=null;
		List<approvalLine> sList=null;
		String code = session.getAttribute("hrCode").toString();
		sList=aDao.getMyInfo(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
}
=======
}
>>>>>>> origin/JSJ

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-09-19 15:07:07.197
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-09-19 15:07:07.197
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-09-19 15:07:09.353
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.n7.erp.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.ModelAndView;
import com.n7.erp.dao.AccountDao;
import com.google.gson.Gson;
import com.n7.erp.bean.ac.A_company;
import com.n7.erp.bean.ac.ApprovalDocument;
<<<<<<< HEAD
import com.n7.erp.bean.ApprovalDocu;
=======
import com.n7.erp.bean.ac.Approvaldocu;
>>>>>>> origin/JSJ
import com.n7.erp.bean.ac.SaleInfo;
import com.n7.erp.bean.ac.myCompany;
import com.n7.erp.bean.ac.approvalLine;



@Component
public class AccountMM {

	@Autowired
	AccountDao aDao;

	ModelAndView mav;

	public Map<String, List<A_company>> insertcomlist(A_company ac, HttpSession session) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_ccode(session.getAttribute("cCode").toString());
		if(ac.getCl_code()!="") {
			if(aDao.insertcomlist(ac)) {
			   List<A_company> aList = aDao.getComList(ac.getCl_code());
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
			}else {
				aMap=null;
			}
		}else {
			List<A_company> aList = aDao.getComList(ac.getCl_code());
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}
		return aMap;
	}

	public Map<String, List<A_company>> serchcomlist() {
		Map<String, List<A_company>> aMap=null;
			   List<A_company> aList = aDao.getCompanyList();
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		return aMap;
	}

	public Map<String, List<A_company>> searchcode(A_company ac, String code) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_code(code);
		   List<A_company> aList = aDao.getsearchCode(ac);
		   if(aList!=null) {
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		   }
	return aMap;
}

	public Map<String, List<A_company>> deleteCom(int cnt, String[] strArray) {
		Map<String, List<A_company>> aMap=null;
		boolean result=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result=aDao.deleteCom(code);
		}
		if(result) {
			List<A_company> aList = aDao.getCompanyList();
			aMap=new HashMap<>();
			   aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saleinsert(HttpServletRequest request, SaleInfo si, HttpSession session) {
		String view=null;
		boolean a=false;
		boolean b= false;
		mav= new ModelAndView();
		A_company ac = new A_company();
		ac = aDao.getcomcode(si.getS_comnum());
		si.setS_clcode(ac.getCl_code());
		si.setS_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("s_pkind");
		String [] strcnt=request.getParameterValues("s_cnt");
		String [] strprice=request.getParameterValues("s_price");
		String [] strprice2=request.getParameterValues("s_price2");
		String [] strtax=request.getParameterValues("s_tax");
		String [] strtotal=request.getParameterValues("s_total");
		String [] strmemo=request.getParameterValues("s_memo");
		     	a = aDao.saleinsert(si);
		if(a && b) {
			    mav.addObject("msg","전표등록성공");
			    view="Account/openTable";
			}else {
				mav.addObject("msg","전표등록실패");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getsaleList() {
		Map<String, List<SaleInfo>> aMap=null;
		   List<SaleInfo> sList1 = aDao.getsaleList();
		   //List<SaleInfo> sList2 = aDao.getsaleList2();
		   if(sList1!=null) {
			   aMap=new HashMap<>();
			   aMap.put("sList1", sList1);
		   }else {
			   aMap=null;
		   }
		   //aMap.put("sList2", sList2);
	return aMap;
}

	public Map<String, List<SaleInfo>> getList(String code) {
		System.out.println(code);
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList = aDao.getList(code);
		if(sList!=null){
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}
		return sMap;
	}

	public ModelAndView getTaxbill(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();
		if(check!=null) {
			if(check.contains("S")) {
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				ac=aDao.getcomInfo(company);
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/taxbillS";

			}else {
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				mc=aDao.getmyCompany();
				ac=aDao.getcomInfo(company);
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				mav.addObject("msg","세금계산서 등록");
				view="Account/taxbillP";
			}
			}else {
				mav.addObject("msg","선택한 항목이없습니다");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> deleteSale(int cnt, String[] strArray) {
		Map<String, List<SaleInfo>> aMap=null;
		boolean result=false;
		boolean result2=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result2=aDao.deleteSale2(code);
			result=aDao.deleteSale(code);
		}
		if(result && result2) {
			List<SaleInfo> sList = aDao.getsaleList();
			aMap=new HashMap<>();
			   aMap.put("sList", sList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saledetails(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();

		if(check!=null) {
				List<SaleInfo> tList = new ArrayList<>();
				tList=aDao.getTaxbill(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				myCompany mc = new myCompany();
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("tList",tList);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/saledetails";
			}else {

			    mav.addObject("msg","매출만 거래명세서를 볼수 있습니다");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView acApproval(String check) {
		mav= new ModelAndView();
		String view ="";
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/acApproval";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView approvalLine() {
		String view=null;
		mav= new ModelAndView();
		List<approvalLine> aList = null;
<<<<<<< HEAD
		aList=aDao.approvalLine();
=======
		aList=aDao.approvalLine(); 
>>>>>>> origin/JSJ
		if(aList.size()!=0) {
				mav.addObject("aList",new Gson().toJson(aList));
				view="Account/approvalLine";
			}else {
<<<<<<< HEAD

			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}

=======
				
			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}
		
>>>>>>> origin/JSJ
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<approvalLine>> searchName(String name) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList=null;
		if(name!=null) {
			aList = aDao.searchName(name);
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> addApproval(int cnt, String[] strArray) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList= new ArrayList<>();
		System.out.println("숫자="+cnt);
		System.out.println("이름값="+strArray.length);
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		String code="";
		approvalLine al = new approvalLine();
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			al=aDao.addApproval(code);
		    aList.add(al);
		}
		if(aList!=null) {
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> approLinecom(String[] code01) {
		Map<String, List<approvalLine>> aMap=null;
		System.out.println(code01.length);
		//System.out.println(code02[0]);
<<<<<<< HEAD

		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();

				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]);
=======
		
		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();
				
				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]); 
>>>>>>> origin/JSJ
					tList1.add(al);
				}
//				for(int i=0; i<code02.length; i++) {
//					approvalLine al = new approvalLine();
<<<<<<< HEAD
//					al=aDao.approLinecom2(code02[i]);
=======
//					al=aDao.approLinecom2(code02[i]); 
>>>>>>> origin/JSJ
//					tList2.add(al);
//				}
				aMap=new HashMap<>();
				System.out.println(tList1);
				aMap.put("tList1",tList1);
				//aMap.put("tList2",tList2);
			}else {
<<<<<<< HEAD

				aMap=null;;
			}

		return aMap;


=======
				
				aMap=null;;
			}
		
		return aMap;
	
	
>>>>>>> origin/JSJ
	}

	public ModelAndView approdocument(HttpServletRequest request, ApprovalDocument ad, HttpSession session) {
		String view=null;
		mav= new ModelAndView();
		boolean a=false;
		boolean b=false;
		boolean c=false;
		A_company ac = new A_company();
		ac = aDao.getcomcode(ad.getRs_comnum());
		ad.setRs_clcode(ac.getCl_code());
		ad.setRs_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("rs_pkind");
		String [] strcnt=request.getParameterValues("rs_cnt");
		String [] strprice=request.getParameterValues("rs_price");
		String [] strprice2=request.getParameterValues("rs_price2");
		String [] strtax=request.getParameterValues("rs_tax");
		String [] strtotal=request.getParameterValues("rs_total");
		String [] strmemo=request.getParameterValues("rs_memo");
		 		a = aDao.approvaldocu(ad);
		     	b = aDao.approdocument(ad);
<<<<<<< HEAD

=======
		     	
>>>>>>> origin/JSJ
		for(int i=0; i<strpkind.length; i++) {
			ad.setRs_pkind(strpkind[i]);
			ad.setRs_cnt(strcnt[i]);
			ad.setRs_price(strprice[i]);
			ad.setRs_price2(strprice2[i]);
			ad.setRs_tax(strtax[i]);
			ad.setRs_total(strtotal[i]);
			ad.setRs_memo(strmemo[i]);
			 	c=aDao.approdocument2(ad);
		}
		if(a && b && c) {
			//aDao.saleListDelete(ad);
			mav.addObject("num","1");
				view="Account/openTable";
			}else {
				mav.addObject("num","0");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getpkind(String pkind) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
		//SaleInfo si = new SaleInfo();
		sList=aDao.getpkind(pkind);
		//sList.add(si);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

	public ModelAndView SaleDetaile(String check) {
		String view=null;
		mav= new ModelAndView();
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/SaleDetaile";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="Account/opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> selectSearch(String select, String choice) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		sList=aDao.selectSreach(select,choice);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

<<<<<<< HEAD
	public Map<String, List<ApprovalDocu>> comparecode(String code) {
		Map<String, List<ApprovalDocu>> sMap=null;
		List<ApprovalDocu> sList=null;

=======
	public Map<String, List<Approvaldocu>> comparecode(String code) {
		Map<String, List<Approvaldocu>> sMap=null;
		List<Approvaldocu> sList=null;
		
>>>>>>> origin/JSJ
		sList=aDao.comparecode(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
<<<<<<< HEAD

	public Map<String, List<approvalLine>> getMyInfo(HttpSession session) {
		Map<String, List<approvalLine>> sMap=null;
		List<approvalLine> sList=null;
		String code = session.getAttribute("hrCode").toString();
		sList=aDao.getMyInfo(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
}
=======
}
>>>>>>> origin/JSJ

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-09-19 15:07:09.384
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-09-19 15:07:09.384
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-09-19 15:07:11.042
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.n7.erp.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.ModelAndView;
import com.n7.erp.dao.AccountDao;
import com.google.gson.Gson;
import com.n7.erp.bean.ac.A_company;
import com.n7.erp.bean.ac.ApprovalDocument;
<<<<<<< HEAD
import com.n7.erp.bean.ApprovalDocu;
=======
import com.n7.erp.bean.ac.Approvaldocu;
>>>>>>> origin/JSJ
import com.n7.erp.bean.ac.SaleInfo;
import com.n7.erp.bean.ac.myCompany;
import com.n7.erp.bean.ac.approvalLine;



@Component
public class AccountMM {

	@Autowired
	AccountDao aDao;

	ModelAndView mav;

	public Map<String, List<A_company>> insertcomlist(A_company ac, HttpSession session) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_ccode(session.getAttribute("cCode").toString());
		if(ac.getCl_code()!="") {
			if(aDao.insertcomlist(ac)) {
			   List<A_company> aList = aDao.getComList(ac.getCl_code());
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
			}else {
				aMap=null;
			}
		}else {
			List<A_company> aList = aDao.getComList(ac.getCl_code());
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}
		return aMap;
	}

	public Map<String, List<A_company>> serchcomlist() {
		Map<String, List<A_company>> aMap=null;
			   List<A_company> aList = aDao.getCompanyList();
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		return aMap;
	}

	public Map<String, List<A_company>> searchcode(A_company ac, String code) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_code(code);
		   List<A_company> aList = aDao.getsearchCode(ac);
		   if(aList!=null) {
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		   }
	return aMap;
}

	public Map<String, List<A_company>> deleteCom(int cnt, String[] strArray) {
		Map<String, List<A_company>> aMap=null;
		boolean result=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result=aDao.deleteCom(code);
		}
		if(result) {
			List<A_company> aList = aDao.getCompanyList();
			aMap=new HashMap<>();
			   aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saleinsert(HttpServletRequest request, SaleInfo si, HttpSession session) {
		String view=null;
		boolean a=false;
		boolean b= false;
		mav= new ModelAndView();
		A_company ac = new A_company();
		ac = aDao.getcomcode(si.getS_comnum());
		si.setS_clcode(ac.getCl_code());
		si.setS_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("s_pkind");
		String [] strcnt=request.getParameterValues("s_cnt");
		String [] strprice=request.getParameterValues("s_price");
		String [] strprice2=request.getParameterValues("s_price2");
		String [] strtax=request.getParameterValues("s_tax");
		String [] strtotal=request.getParameterValues("s_total");
		String [] strmemo=request.getParameterValues("s_memo");
		     	a = aDao.saleinsert(si);
		if(a && b) {
			    mav.addObject("msg","전표등록성공");
			    view="Account/openTable";
			}else {
				mav.addObject("msg","전표등록실패");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getsaleList() {
		Map<String, List<SaleInfo>> aMap=null;
		   List<SaleInfo> sList1 = aDao.getsaleList();
		   //List<SaleInfo> sList2 = aDao.getsaleList2();
		   if(sList1!=null) {
			   aMap=new HashMap<>();
			   aMap.put("sList1", sList1);
		   }else {
			   aMap=null;
		   }
		   //aMap.put("sList2", sList2);
	return aMap;
}

	public Map<String, List<SaleInfo>> getList(String code) {
		System.out.println(code);
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList = aDao.getList(code);
		if(sList!=null){
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}
		return sMap;
	}

	public ModelAndView getTaxbill(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();
		if(check!=null) {
			if(check.contains("S")) {
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				ac=aDao.getcomInfo(company);
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/taxbillS";

			}else {
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				mc=aDao.getmyCompany();
				ac=aDao.getcomInfo(company);
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				mav.addObject("msg","세금계산서 등록");
				view="Account/taxbillP";
			}
			}else {
				mav.addObject("msg","선택한 항목이없습니다");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> deleteSale(int cnt, String[] strArray) {
		Map<String, List<SaleInfo>> aMap=null;
		boolean result=false;
		boolean result2=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result2=aDao.deleteSale2(code);
			result=aDao.deleteSale(code);
		}
		if(result && result2) {
			List<SaleInfo> sList = aDao.getsaleList();
			aMap=new HashMap<>();
			   aMap.put("sList", sList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saledetails(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();

		if(check!=null) {
				List<SaleInfo> tList = new ArrayList<>();
				tList=aDao.getTaxbill(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				myCompany mc = new myCompany();
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("tList",tList);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/saledetails";
			}else {

			    mav.addObject("msg","매출만 거래명세서를 볼수 있습니다");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView acApproval(String check) {
		mav= new ModelAndView();
		String view ="";
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/acApproval";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView approvalLine() {
		String view=null;
		mav= new ModelAndView();
		List<approvalLine> aList = null;
<<<<<<< HEAD
		aList=aDao.approvalLine();
=======
		aList=aDao.approvalLine(); 
>>>>>>> origin/JSJ
		if(aList.size()!=0) {
				mav.addObject("aList",new Gson().toJson(aList));
				view="Account/approvalLine";
			}else {
<<<<<<< HEAD

			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}

=======
				
			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}
		
>>>>>>> origin/JSJ
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<approvalLine>> searchName(String name) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList=null;
		if(name!=null) {
			aList = aDao.searchName(name);
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> addApproval(int cnt, String[] strArray) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList= new ArrayList<>();
		System.out.println("숫자="+cnt);
		System.out.println("이름값="+strArray.length);
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		String code="";
		approvalLine al = new approvalLine();
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			al=aDao.addApproval(code);
		    aList.add(al);
		}
		if(aList!=null) {
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> approLinecom(String[] code01) {
		Map<String, List<approvalLine>> aMap=null;
		System.out.println(code01.length);
		//System.out.println(code02[0]);
<<<<<<< HEAD

		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();

				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]);
=======
		
		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();
				
				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]); 
>>>>>>> origin/JSJ
					tList1.add(al);
				}
//				for(int i=0; i<code02.length; i++) {
//					approvalLine al = new approvalLine();
<<<<<<< HEAD
//					al=aDao.approLinecom2(code02[i]);
=======
//					al=aDao.approLinecom2(code02[i]); 
>>>>>>> origin/JSJ
//					tList2.add(al);
//				}
				aMap=new HashMap<>();
				System.out.println(tList1);
				aMap.put("tList1",tList1);
				//aMap.put("tList2",tList2);
			}else {
<<<<<<< HEAD

				aMap=null;;
			}

		return aMap;


=======
				
				aMap=null;;
			}
		
		return aMap;
	
	
>>>>>>> origin/JSJ
	}

	public ModelAndView approdocument(HttpServletRequest request, ApprovalDocument ad, HttpSession session) {
		String view=null;
		mav= new ModelAndView();
		boolean a=false;
		boolean b=false;
		boolean c=false;
		A_company ac = new A_company();
		ac = aDao.getcomcode(ad.getRs_comnum());
		ad.setRs_clcode(ac.getCl_code());
		ad.setRs_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("rs_pkind");
		String [] strcnt=request.getParameterValues("rs_cnt");
		String [] strprice=request.getParameterValues("rs_price");
		String [] strprice2=request.getParameterValues("rs_price2");
		String [] strtax=request.getParameterValues("rs_tax");
		String [] strtotal=request.getParameterValues("rs_total");
		String [] strmemo=request.getParameterValues("rs_memo");
		 		a = aDao.approvaldocu(ad);
		     	b = aDao.approdocument(ad);
<<<<<<< HEAD

=======
		     	
>>>>>>> origin/JSJ
		for(int i=0; i<strpkind.length; i++) {
			ad.setRs_pkind(strpkind[i]);
			ad.setRs_cnt(strcnt[i]);
			ad.setRs_price(strprice[i]);
			ad.setRs_price2(strprice2[i]);
			ad.setRs_tax(strtax[i]);
			ad.setRs_total(strtotal[i]);
			ad.setRs_memo(strmemo[i]);
			 	c=aDao.approdocument2(ad);
		}
		if(a && b && c) {
			//aDao.saleListDelete(ad);
			mav.addObject("num","1");
				view="Account/openTable";
			}else {
				mav.addObject("num","0");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getpkind(String pkind) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
		//SaleInfo si = new SaleInfo();
		sList=aDao.getpkind(pkind);
		//sList.add(si);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

	public ModelAndView SaleDetaile(String check) {
		String view=null;
		mav= new ModelAndView();
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/SaleDetaile";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="Account/opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> selectSearch(String select, String choice) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		sList=aDao.selectSreach(select,choice);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

<<<<<<< HEAD
	public Map<String, List<ApprovalDocu>> comparecode(String code) {
		Map<String, List<ApprovalDocu>> sMap=null;
		List<ApprovalDocu> sList=null;

=======
	public Map<String, List<Approvaldocu>> comparecode(String code) {
		Map<String, List<Approvaldocu>> sMap=null;
		List<Approvaldocu> sList=null;
		
>>>>>>> origin/JSJ
		sList=aDao.comparecode(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
<<<<<<< HEAD

	public Map<String, List<approvalLine>> getMyInfo(HttpSession session) {
		Map<String, List<approvalLine>> sMap=null;
		List<approvalLine> sList=null;
		String code = session.getAttribute("hrCode").toString();
		sList=aDao.getMyInfo(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
}
=======
}
>>>>>>> origin/JSJ

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-09-19 15:07:11.073
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-09-19 15:07:11.089
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-09-19 15:07:11.995
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.n7.erp.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.ModelAndView;
import com.n7.erp.dao.AccountDao;
import com.google.gson.Gson;
import com.n7.erp.bean.ac.A_company;
import com.n7.erp.bean.ac.ApprovalDocument;
<<<<<<< HEAD
import com.n7.erp.bean.ApprovalDocu;
=======
import com.n7.erp.bean.ac.Approvaldocu;
>>>>>>> origin/JSJ
import com.n7.erp.bean.ac.SaleInfo;
import com.n7.erp.bean.ac.myCompany;
import com.n7.erp.bean.ac.approvalLine;



@Component
public class AccountMM {

	@Autowired
	AccountDao aDao;

	ModelAndView mav;

	public Map<String, List<A_company>> insertcomlist(A_company ac, HttpSession session) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_ccode(session.getAttribute("cCode").toString());
		if(ac.getCl_code()!="") {
			if(aDao.insertcomlist(ac)) {
			   List<A_company> aList = aDao.getComList(ac.getCl_code());
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
			}else {
				aMap=null;
			}
		}else {
			List<A_company> aList = aDao.getComList(ac.getCl_code());
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}
		return aMap;
	}

	public Map<String, List<A_company>> serchcomlist() {
		Map<String, List<A_company>> aMap=null;
			   List<A_company> aList = aDao.getCompanyList();
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		return aMap;
	}

	public Map<String, List<A_company>> searchcode(A_company ac, String code) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_code(code);
		   List<A_company> aList = aDao.getsearchCode(ac);
		   if(aList!=null) {
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		   }
	return aMap;
}

	public Map<String, List<A_company>> deleteCom(int cnt, String[] strArray) {
		Map<String, List<A_company>> aMap=null;
		boolean result=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result=aDao.deleteCom(code);
		}
		if(result) {
			List<A_company> aList = aDao.getCompanyList();
			aMap=new HashMap<>();
			   aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saleinsert(HttpServletRequest request, SaleInfo si, HttpSession session) {
		String view=null;
		boolean a=false;
		boolean b= false;
		mav= new ModelAndView();
		A_company ac = new A_company();
		ac = aDao.getcomcode(si.getS_comnum());
		si.setS_clcode(ac.getCl_code());
		si.setS_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("s_pkind");
		String [] strcnt=request.getParameterValues("s_cnt");
		String [] strprice=request.getParameterValues("s_price");
		String [] strprice2=request.getParameterValues("s_price2");
		String [] strtax=request.getParameterValues("s_tax");
		String [] strtotal=request.getParameterValues("s_total");
		String [] strmemo=request.getParameterValues("s_memo");
		     	a = aDao.saleinsert(si);
		if(a && b) {
			    mav.addObject("msg","전표등록성공");
			    view="Account/openTable";
			}else {
				mav.addObject("msg","전표등록실패");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getsaleList() {
		Map<String, List<SaleInfo>> aMap=null;
		   List<SaleInfo> sList1 = aDao.getsaleList();
		   //List<SaleInfo> sList2 = aDao.getsaleList2();
		   if(sList1!=null) {
			   aMap=new HashMap<>();
			   aMap.put("sList1", sList1);
		   }else {
			   aMap=null;
		   }
		   //aMap.put("sList2", sList2);
	return aMap;
}

	public Map<String, List<SaleInfo>> getList(String code) {
		System.out.println(code);
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList = aDao.getList(code);
		if(sList!=null){
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}
		return sMap;
	}

	public ModelAndView getTaxbill(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();
		if(check!=null) {
			if(check.contains("S")) {
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				ac=aDao.getcomInfo(company);
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/taxbillS";

			}else {
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				mc=aDao.getmyCompany();
				ac=aDao.getcomInfo(company);
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				mav.addObject("msg","세금계산서 등록");
				view="Account/taxbillP";
			}
			}else {
				mav.addObject("msg","선택한 항목이없습니다");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> deleteSale(int cnt, String[] strArray) {
		Map<String, List<SaleInfo>> aMap=null;
		boolean result=false;
		boolean result2=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result2=aDao.deleteSale2(code);
			result=aDao.deleteSale(code);
		}
		if(result && result2) {
			List<SaleInfo> sList = aDao.getsaleList();
			aMap=new HashMap<>();
			   aMap.put("sList", sList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saledetails(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();

		if(check!=null) {
				List<SaleInfo> tList = new ArrayList<>();
				tList=aDao.getTaxbill(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				myCompany mc = new myCompany();
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("tList",tList);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/saledetails";
			}else {

			    mav.addObject("msg","매출만 거래명세서를 볼수 있습니다");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView acApproval(String check) {
		mav= new ModelAndView();
		String view ="";
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/acApproval";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView approvalLine() {
		String view=null;
		mav= new ModelAndView();
		List<approvalLine> aList = null;
		aList=aDao.approvalLine();
=======
		aList=aDao.approvalLine(); 
>>>>>>> origin/JSJ
		if(aList.size()!=0) {
				mav.addObject("aList",new Gson().toJson(aList));
				view="Account/approvalLine";
			}else {
<<<<<<< HEAD

			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}

=======
				
			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}
		
>>>>>>> origin/JSJ
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<approvalLine>> searchName(String name) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList=null;
		if(name!=null) {
			aList = aDao.searchName(name);
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> addApproval(int cnt, String[] strArray) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList= new ArrayList<>();
		System.out.println("숫자="+cnt);
		System.out.println("이름값="+strArray.length);
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		String code="";
		approvalLine al = new approvalLine();
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			al=aDao.addApproval(code);
		    aList.add(al);
		}
		if(aList!=null) {
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> approLinecom(String[] code01) {
		Map<String, List<approvalLine>> aMap=null;
		System.out.println(code01.length);
		//System.out.println(code02[0]);
<<<<<<< HEAD

		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();

				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]);
=======
		
		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();
				
				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]); 
>>>>>>> origin/JSJ
					tList1.add(al);
				}
//				for(int i=0; i<code02.length; i++) {
//					approvalLine al = new approvalLine();
<<<<<<< HEAD
//					al=aDao.approLinecom2(code02[i]);
=======
//					al=aDao.approLinecom2(code02[i]); 
>>>>>>> origin/JSJ
//					tList2.add(al);
//				}
				aMap=new HashMap<>();
				System.out.println(tList1);
				aMap.put("tList1",tList1);
				//aMap.put("tList2",tList2);
			}else {
<<<<<<< HEAD

				aMap=null;;
			}

		return aMap;


=======
				
				aMap=null;;
			}
		
		return aMap;
	
	
>>>>>>> origin/JSJ
	}

	public ModelAndView approdocument(HttpServletRequest request, ApprovalDocument ad, HttpSession session) {
		String view=null;
		mav= new ModelAndView();
		boolean a=false;
		boolean b=false;
		boolean c=false;
		A_company ac = new A_company();
		ac = aDao.getcomcode(ad.getRs_comnum());
		ad.setRs_clcode(ac.getCl_code());
		ad.setRs_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("rs_pkind");
		String [] strcnt=request.getParameterValues("rs_cnt");
		String [] strprice=request.getParameterValues("rs_price");
		String [] strprice2=request.getParameterValues("rs_price2");
		String [] strtax=request.getParameterValues("rs_tax");
		String [] strtotal=request.getParameterValues("rs_total");
		String [] strmemo=request.getParameterValues("rs_memo");
		 		a = aDao.approvaldocu(ad);
		     	b = aDao.approdocument(ad);
<<<<<<< HEAD

=======
		     	
>>>>>>> origin/JSJ
		for(int i=0; i<strpkind.length; i++) {
			ad.setRs_pkind(strpkind[i]);
			ad.setRs_cnt(strcnt[i]);
			ad.setRs_price(strprice[i]);
			ad.setRs_price2(strprice2[i]);
			ad.setRs_tax(strtax[i]);
			ad.setRs_total(strtotal[i]);
			ad.setRs_memo(strmemo[i]);
			 	c=aDao.approdocument2(ad);
		}
		if(a && b && c) {
			//aDao.saleListDelete(ad);
			mav.addObject("num","1");
				view="Account/openTable";
			}else {
				mav.addObject("num","0");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getpkind(String pkind) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
		//SaleInfo si = new SaleInfo();
		sList=aDao.getpkind(pkind);
		//sList.add(si);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

	public ModelAndView SaleDetaile(String check) {
		String view=null;
		mav= new ModelAndView();
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/SaleDetaile";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="Account/opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> selectSearch(String select, String choice) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		sList=aDao.selectSreach(select,choice);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

<<<<<<< HEAD
	public Map<String, List<ApprovalDocu>> comparecode(String code) {
		Map<String, List<ApprovalDocu>> sMap=null;
		List<ApprovalDocu> sList=null;

=======
	public Map<String, List<Approvaldocu>> comparecode(String code) {
		Map<String, List<Approvaldocu>> sMap=null;
		List<Approvaldocu> sList=null;
		
>>>>>>> origin/JSJ
		sList=aDao.comparecode(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
<<<<<<< HEAD

	public Map<String, List<approvalLine>> getMyInfo(HttpSession session) {
		Map<String, List<approvalLine>> sMap=null;
		List<approvalLine> sList=null;
		String code = session.getAttribute("hrCode").toString();
		sList=aDao.getMyInfo(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
}
=======
}
>>>>>>> origin/JSJ

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-09-19 15:07:12.027
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-09-19 15:07:12.027
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-09-19 15:07:14.246
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.n7.erp.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.ModelAndView;
import com.n7.erp.dao.AccountDao;
import com.google.gson.Gson;
import com.n7.erp.bean.ac.A_company;
import com.n7.erp.bean.ac.ApprovalDocument;
<<<<<<< HEAD
import com.n7.erp.bean.ApprovalDocu;
=======
import com.n7.erp.bean.ac.Approvaldocu;
>>>>>>> origin/JSJ
import com.n7.erp.bean.ac.SaleInfo;
import com.n7.erp.bean.ac.myCompany;
import com.n7.erp.bean.ac.approvalLine;



@Component
public class AccountMM {

	@Autowired
	AccountDao aDao;

	ModelAndView mav;

	public Map<String, List<A_company>> insertcomlist(A_company ac, HttpSession session) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_ccode(session.getAttribute("cCode").toString());
		if(ac.getCl_code()!="") {
			if(aDao.insertcomlist(ac)) {
			   List<A_company> aList = aDao.getComList(ac.getCl_code());
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
			}else {
				aMap=null;
			}
		}else {
			List<A_company> aList = aDao.getComList(ac.getCl_code());
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}
		return aMap;
	}

	public Map<String, List<A_company>> serchcomlist() {
		Map<String, List<A_company>> aMap=null;
			   List<A_company> aList = aDao.getCompanyList();
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		return aMap;
	}

	public Map<String, List<A_company>> searchcode(A_company ac, String code) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_code(code);
		   List<A_company> aList = aDao.getsearchCode(ac);
		   if(aList!=null) {
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		   }
	return aMap;
}

	public Map<String, List<A_company>> deleteCom(int cnt, String[] strArray) {
		Map<String, List<A_company>> aMap=null;
		boolean result=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result=aDao.deleteCom(code);
		}
		if(result) {
			List<A_company> aList = aDao.getCompanyList();
			aMap=new HashMap<>();
			   aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saleinsert(HttpServletRequest request, SaleInfo si, HttpSession session) {
		String view=null;
		boolean a=false;
		boolean b= false;
		mav= new ModelAndView();
		A_company ac = new A_company();
		ac = aDao.getcomcode(si.getS_comnum());
		si.setS_clcode(ac.getCl_code());
		si.setS_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("s_pkind");
		String [] strcnt=request.getParameterValues("s_cnt");
		String [] strprice=request.getParameterValues("s_price");
		String [] strprice2=request.getParameterValues("s_price2");
		String [] strtax=request.getParameterValues("s_tax");
		String [] strtotal=request.getParameterValues("s_total");
		String [] strmemo=request.getParameterValues("s_memo");
		     	a = aDao.saleinsert(si);
		if(a && b) {
			    mav.addObject("msg","전표등록성공");
			    view="Account/openTable";
			}else {
				mav.addObject("msg","전표등록실패");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getsaleList() {
		Map<String, List<SaleInfo>> aMap=null;
		   List<SaleInfo> sList1 = aDao.getsaleList();
		   //List<SaleInfo> sList2 = aDao.getsaleList2();
		   if(sList1!=null) {
			   aMap=new HashMap<>();
			   aMap.put("sList1", sList1);
		   }else {
			   aMap=null;
		   }
		   //aMap.put("sList2", sList2);
	return aMap;
}

	public Map<String, List<SaleInfo>> getList(String code) {
		System.out.println(code);
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList = aDao.getList(code);
		if(sList!=null){
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}
		return sMap;
	}

	public ModelAndView getTaxbill(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();
		if(check!=null) {
			if(check.contains("S")) {
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				ac=aDao.getcomInfo(company);
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/taxbillS";

			}else {
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				mc=aDao.getmyCompany();
				ac=aDao.getcomInfo(company);
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				mav.addObject("msg","세금계산서 등록");
				view="Account/taxbillP";
			}
			}else {
				mav.addObject("msg","선택한 항목이없습니다");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> deleteSale(int cnt, String[] strArray) {
		Map<String, List<SaleInfo>> aMap=null;
		boolean result=false;
		boolean result2=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result2=aDao.deleteSale2(code);
			result=aDao.deleteSale(code);
		}
		if(result && result2) {
			List<SaleInfo> sList = aDao.getsaleList();
			aMap=new HashMap<>();
			   aMap.put("sList", sList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saledetails(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();

		if(check!=null) {
				List<SaleInfo> tList = new ArrayList<>();
				tList=aDao.getTaxbill(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				myCompany mc = new myCompany();
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("tList",tList);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/saledetails";
			}else {

			    mav.addObject("msg","매출만 거래명세서를 볼수 있습니다");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView acApproval(String check) {
		mav= new ModelAndView();
		String view ="";
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/acApproval";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView approvalLine() {
		String view=null;
		mav= new ModelAndView();
		List<approvalLine> aList = null;
		aList=aDao.approvalLine();
		if(aList.size()!=0) {
				mav.addObject("aList",new Gson().toJson(aList));
				view="Account/approvalLine";
			}else {

			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}

=======
				
			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}
		
>>>>>>> origin/JSJ
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<approvalLine>> searchName(String name) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList=null;
		if(name!=null) {
			aList = aDao.searchName(name);
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> addApproval(int cnt, String[] strArray) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList= new ArrayList<>();
		System.out.println("숫자="+cnt);
		System.out.println("이름값="+strArray.length);
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		String code="";
		approvalLine al = new approvalLine();
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			al=aDao.addApproval(code);
		    aList.add(al);
		}
		if(aList!=null) {
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> approLinecom(String[] code01) {
		Map<String, List<approvalLine>> aMap=null;
		System.out.println(code01.length);
		//System.out.println(code02[0]);
<<<<<<< HEAD

		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();

				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]);
=======
		
		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();
				
				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]); 
>>>>>>> origin/JSJ
					tList1.add(al);
				}
//				for(int i=0; i<code02.length; i++) {
//					approvalLine al = new approvalLine();
<<<<<<< HEAD
//					al=aDao.approLinecom2(code02[i]);
=======
//					al=aDao.approLinecom2(code02[i]); 
>>>>>>> origin/JSJ
//					tList2.add(al);
//				}
				aMap=new HashMap<>();
				System.out.println(tList1);
				aMap.put("tList1",tList1);
				//aMap.put("tList2",tList2);
			}else {
<<<<<<< HEAD

				aMap=null;;
			}

		return aMap;


=======
				
				aMap=null;;
			}
		
		return aMap;
	
	
>>>>>>> origin/JSJ
	}

	public ModelAndView approdocument(HttpServletRequest request, ApprovalDocument ad, HttpSession session) {
		String view=null;
		mav= new ModelAndView();
		boolean a=false;
		boolean b=false;
		boolean c=false;
		A_company ac = new A_company();
		ac = aDao.getcomcode(ad.getRs_comnum());
		ad.setRs_clcode(ac.getCl_code());
		ad.setRs_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("rs_pkind");
		String [] strcnt=request.getParameterValues("rs_cnt");
		String [] strprice=request.getParameterValues("rs_price");
		String [] strprice2=request.getParameterValues("rs_price2");
		String [] strtax=request.getParameterValues("rs_tax");
		String [] strtotal=request.getParameterValues("rs_total");
		String [] strmemo=request.getParameterValues("rs_memo");
		 		a = aDao.approvaldocu(ad);
		     	b = aDao.approdocument(ad);
<<<<<<< HEAD

=======
		     	
>>>>>>> origin/JSJ
		for(int i=0; i<strpkind.length; i++) {
			ad.setRs_pkind(strpkind[i]);
			ad.setRs_cnt(strcnt[i]);
			ad.setRs_price(strprice[i]);
			ad.setRs_price2(strprice2[i]);
			ad.setRs_tax(strtax[i]);
			ad.setRs_total(strtotal[i]);
			ad.setRs_memo(strmemo[i]);
			 	c=aDao.approdocument2(ad);
		}
		if(a && b && c) {
			//aDao.saleListDelete(ad);
			mav.addObject("num","1");
				view="Account/openTable";
			}else {
				mav.addObject("num","0");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getpkind(String pkind) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
		//SaleInfo si = new SaleInfo();
		sList=aDao.getpkind(pkind);
		//sList.add(si);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

	public ModelAndView SaleDetaile(String check) {
		String view=null;
		mav= new ModelAndView();
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/SaleDetaile";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="Account/opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> selectSearch(String select, String choice) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		sList=aDao.selectSreach(select,choice);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

<<<<<<< HEAD
	public Map<String, List<ApprovalDocu>> comparecode(String code) {
		Map<String, List<ApprovalDocu>> sMap=null;
		List<ApprovalDocu> sList=null;

=======
	public Map<String, List<Approvaldocu>> comparecode(String code) {
		Map<String, List<Approvaldocu>> sMap=null;
		List<Approvaldocu> sList=null;
		
>>>>>>> origin/JSJ
		sList=aDao.comparecode(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
<<<<<<< HEAD

	public Map<String, List<approvalLine>> getMyInfo(HttpSession session) {
		Map<String, List<approvalLine>> sMap=null;
		List<approvalLine> sList=null;
		String code = session.getAttribute("hrCode").toString();
		sList=aDao.getMyInfo(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
}
=======
}
>>>>>>> origin/JSJ

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-09-19 15:07:14.277
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-09-19 15:07:14.277
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-09-19 15:07:15.871
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.n7.erp.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.ModelAndView;
import com.n7.erp.dao.AccountDao;
import com.google.gson.Gson;
import com.n7.erp.bean.ac.A_company;
import com.n7.erp.bean.ac.ApprovalDocument;
<<<<<<< HEAD
import com.n7.erp.bean.ApprovalDocu;
=======
import com.n7.erp.bean.ac.Approvaldocu;
>>>>>>> origin/JSJ
import com.n7.erp.bean.ac.SaleInfo;
import com.n7.erp.bean.ac.myCompany;
import com.n7.erp.bean.ac.approvalLine;



@Component
public class AccountMM {

	@Autowired
	AccountDao aDao;

	ModelAndView mav;

	public Map<String, List<A_company>> insertcomlist(A_company ac, HttpSession session) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_ccode(session.getAttribute("cCode").toString());
		if(ac.getCl_code()!="") {
			if(aDao.insertcomlist(ac)) {
			   List<A_company> aList = aDao.getComList(ac.getCl_code());
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
			}else {
				aMap=null;
			}
		}else {
			List<A_company> aList = aDao.getComList(ac.getCl_code());
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}
		return aMap;
	}

	public Map<String, List<A_company>> serchcomlist() {
		Map<String, List<A_company>> aMap=null;
			   List<A_company> aList = aDao.getCompanyList();
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		return aMap;
	}

	public Map<String, List<A_company>> searchcode(A_company ac, String code) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_code(code);
		   List<A_company> aList = aDao.getsearchCode(ac);
		   if(aList!=null) {
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		   }
	return aMap;
}

	public Map<String, List<A_company>> deleteCom(int cnt, String[] strArray) {
		Map<String, List<A_company>> aMap=null;
		boolean result=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result=aDao.deleteCom(code);
		}
		if(result) {
			List<A_company> aList = aDao.getCompanyList();
			aMap=new HashMap<>();
			   aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saleinsert(HttpServletRequest request, SaleInfo si, HttpSession session) {
		String view=null;
		boolean a=false;
		boolean b= false;
		mav= new ModelAndView();
		A_company ac = new A_company();
		ac = aDao.getcomcode(si.getS_comnum());
		si.setS_clcode(ac.getCl_code());
		si.setS_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("s_pkind");
		String [] strcnt=request.getParameterValues("s_cnt");
		String [] strprice=request.getParameterValues("s_price");
		String [] strprice2=request.getParameterValues("s_price2");
		String [] strtax=request.getParameterValues("s_tax");
		String [] strtotal=request.getParameterValues("s_total");
		String [] strmemo=request.getParameterValues("s_memo");
		     	a = aDao.saleinsert(si);
		if(a && b) {
			    mav.addObject("msg","전표등록성공");
			    view="Account/openTable";
			}else {
				mav.addObject("msg","전표등록실패");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getsaleList() {
		Map<String, List<SaleInfo>> aMap=null;
		   List<SaleInfo> sList1 = aDao.getsaleList();
		   //List<SaleInfo> sList2 = aDao.getsaleList2();
		   if(sList1!=null) {
			   aMap=new HashMap<>();
			   aMap.put("sList1", sList1);
		   }else {
			   aMap=null;
		   }
		   //aMap.put("sList2", sList2);
	return aMap;
}

	public Map<String, List<SaleInfo>> getList(String code) {
		System.out.println(code);
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList = aDao.getList(code);
		if(sList!=null){
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}
		return sMap;
	}

	public ModelAndView getTaxbill(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();
		if(check!=null) {
			if(check.contains("S")) {
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				ac=aDao.getcomInfo(company);
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/taxbillS";

			}else {
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				mc=aDao.getmyCompany();
				ac=aDao.getcomInfo(company);
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				mav.addObject("msg","세금계산서 등록");
				view="Account/taxbillP";
			}
			}else {
				mav.addObject("msg","선택한 항목이없습니다");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> deleteSale(int cnt, String[] strArray) {
		Map<String, List<SaleInfo>> aMap=null;
		boolean result=false;
		boolean result2=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result2=aDao.deleteSale2(code);
			result=aDao.deleteSale(code);
		}
		if(result && result2) {
			List<SaleInfo> sList = aDao.getsaleList();
			aMap=new HashMap<>();
			   aMap.put("sList", sList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saledetails(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();

		if(check!=null) {
				List<SaleInfo> tList = new ArrayList<>();
				tList=aDao.getTaxbill(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				myCompany mc = new myCompany();
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("tList",tList);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/saledetails";
			}else {

			    mav.addObject("msg","매출만 거래명세서를 볼수 있습니다");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView acApproval(String check) {
		mav= new ModelAndView();
		String view ="";
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/acApproval";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView approvalLine() {
		String view=null;
		mav= new ModelAndView();
		List<approvalLine> aList = null;
		aList=aDao.approvalLine();
		if(aList.size()!=0) {
				mav.addObject("aList",new Gson().toJson(aList));
				view="Account/approvalLine";
			}else {

			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}

		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<approvalLine>> searchName(String name) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList=null;
		if(name!=null) {
			aList = aDao.searchName(name);
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> addApproval(int cnt, String[] strArray) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList= new ArrayList<>();
		System.out.println("숫자="+cnt);
		System.out.println("이름값="+strArray.length);
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		String code="";
		approvalLine al = new approvalLine();
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			al=aDao.addApproval(code);
		    aList.add(al);
		}
		if(aList!=null) {
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> approLinecom(String[] code01) {
		Map<String, List<approvalLine>> aMap=null;
		System.out.println(code01.length);
		//System.out.println(code02[0]);
<<<<<<< HEAD

		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();

				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]);
=======
		
		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();
				
				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]); 
>>>>>>> origin/JSJ
					tList1.add(al);
				}
//				for(int i=0; i<code02.length; i++) {
//					approvalLine al = new approvalLine();
<<<<<<< HEAD
//					al=aDao.approLinecom2(code02[i]);
=======
//					al=aDao.approLinecom2(code02[i]); 
>>>>>>> origin/JSJ
//					tList2.add(al);
//				}
				aMap=new HashMap<>();
				System.out.println(tList1);
				aMap.put("tList1",tList1);
				//aMap.put("tList2",tList2);
			}else {
<<<<<<< HEAD

				aMap=null;;
			}

		return aMap;


=======
				
				aMap=null;;
			}
		
		return aMap;
	
	
>>>>>>> origin/JSJ
	}

	public ModelAndView approdocument(HttpServletRequest request, ApprovalDocument ad, HttpSession session) {
		String view=null;
		mav= new ModelAndView();
		boolean a=false;
		boolean b=false;
		boolean c=false;
		A_company ac = new A_company();
		ac = aDao.getcomcode(ad.getRs_comnum());
		ad.setRs_clcode(ac.getCl_code());
		ad.setRs_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("rs_pkind");
		String [] strcnt=request.getParameterValues("rs_cnt");
		String [] strprice=request.getParameterValues("rs_price");
		String [] strprice2=request.getParameterValues("rs_price2");
		String [] strtax=request.getParameterValues("rs_tax");
		String [] strtotal=request.getParameterValues("rs_total");
		String [] strmemo=request.getParameterValues("rs_memo");
		 		a = aDao.approvaldocu(ad);
		     	b = aDao.approdocument(ad);
<<<<<<< HEAD

=======
		     	
>>>>>>> origin/JSJ
		for(int i=0; i<strpkind.length; i++) {
			ad.setRs_pkind(strpkind[i]);
			ad.setRs_cnt(strcnt[i]);
			ad.setRs_price(strprice[i]);
			ad.setRs_price2(strprice2[i]);
			ad.setRs_tax(strtax[i]);
			ad.setRs_total(strtotal[i]);
			ad.setRs_memo(strmemo[i]);
			 	c=aDao.approdocument2(ad);
		}
		if(a && b && c) {
			//aDao.saleListDelete(ad);
			mav.addObject("num","1");
				view="Account/openTable";
			}else {
				mav.addObject("num","0");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getpkind(String pkind) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
		//SaleInfo si = new SaleInfo();
		sList=aDao.getpkind(pkind);
		//sList.add(si);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

	public ModelAndView SaleDetaile(String check) {
		String view=null;
		mav= new ModelAndView();
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/SaleDetaile";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="Account/opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> selectSearch(String select, String choice) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		sList=aDao.selectSreach(select,choice);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

<<<<<<< HEAD
	public Map<String, List<ApprovalDocu>> comparecode(String code) {
		Map<String, List<ApprovalDocu>> sMap=null;
		List<ApprovalDocu> sList=null;

=======
	public Map<String, List<Approvaldocu>> comparecode(String code) {
		Map<String, List<Approvaldocu>> sMap=null;
		List<Approvaldocu> sList=null;
		
>>>>>>> origin/JSJ
		sList=aDao.comparecode(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
<<<<<<< HEAD

	public Map<String, List<approvalLine>> getMyInfo(HttpSession session) {
		Map<String, List<approvalLine>> sMap=null;
		List<approvalLine> sList=null;
		String code = session.getAttribute("hrCode").toString();
		sList=aDao.getMyInfo(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
}
=======
}
>>>>>>> origin/JSJ

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-09-19 15:07:15.918
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-09-19 15:07:15.918
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-09-19 15:07:36.721
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.n7.erp.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.ModelAndView;
import com.n7.erp.dao.AccountDao;
import com.google.gson.Gson;
import com.n7.erp.bean.ac.A_company;
import com.n7.erp.bean.ac.ApprovalDocument;
<<<<<<< HEAD
import com.n7.erp.bean.ApprovalDocu;
=======
import com.n7.erp.bean.ac.Approvaldocu;
>>>>>>> origin/JSJ
import com.n7.erp.bean.ac.SaleInfo;
import com.n7.erp.bean.ac.myCompany;
import com.n7.erp.bean.ac.approvalLine;



@Component
public class AccountMM {

	@Autowired
	AccountDao aDao;

	ModelAndView mav;

	public Map<String, List<A_company>> insertcomlist(A_company ac, HttpSession session) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_ccode(session.getAttribute("cCode").toString());
		if(ac.getCl_code()!="") {
			if(aDao.insertcomlist(ac)) {
			   List<A_company> aList = aDao.getComList(ac.getCl_code());
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
			}else {
				aMap=null;
			}
		}else {
			List<A_company> aList = aDao.getComList(ac.getCl_code());
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}
		return aMap;
	}

	public Map<String, List<A_company>> serchcomlist() {
		Map<String, List<A_company>> aMap=null;
			   List<A_company> aList = aDao.getCompanyList();
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		return aMap;
	}

	public Map<String, List<A_company>> searchcode(A_company ac, String code) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_code(code);
		   List<A_company> aList = aDao.getsearchCode(ac);
		   if(aList!=null) {
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		   }
	return aMap;
}

	public Map<String, List<A_company>> deleteCom(int cnt, String[] strArray) {
		Map<String, List<A_company>> aMap=null;
		boolean result=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result=aDao.deleteCom(code);
		}
		if(result) {
			List<A_company> aList = aDao.getCompanyList();
			aMap=new HashMap<>();
			   aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saleinsert(HttpServletRequest request, SaleInfo si, HttpSession session) {
		String view=null;
		boolean a=false;
		boolean b= false;
		mav= new ModelAndView();
		A_company ac = new A_company();
		ac = aDao.getcomcode(si.getS_comnum());
		si.setS_clcode(ac.getCl_code());
		si.setS_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("s_pkind");
		String [] strcnt=request.getParameterValues("s_cnt");
		String [] strprice=request.getParameterValues("s_price");
		String [] strprice2=request.getParameterValues("s_price2");
		String [] strtax=request.getParameterValues("s_tax");
		String [] strtotal=request.getParameterValues("s_total");
		String [] strmemo=request.getParameterValues("s_memo");
		     	a = aDao.saleinsert(si);
		if(a && b) {
			    mav.addObject("msg","전표등록성공");
			    view="Account/openTable";
			}else {
				mav.addObject("msg","전표등록실패");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getsaleList() {
		Map<String, List<SaleInfo>> aMap=null;
		   List<SaleInfo> sList1 = aDao.getsaleList();
		   //List<SaleInfo> sList2 = aDao.getsaleList2();
		   if(sList1!=null) {
			   aMap=new HashMap<>();
			   aMap.put("sList1", sList1);
		   }else {
			   aMap=null;
		   }
		   //aMap.put("sList2", sList2);
	return aMap;
}

	public Map<String, List<SaleInfo>> getList(String code) {
		System.out.println(code);
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList = aDao.getList(code);
		if(sList!=null){
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}
		return sMap;
	}

	public ModelAndView getTaxbill(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();
		if(check!=null) {
			if(check.contains("S")) {
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				ac=aDao.getcomInfo(company);
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/taxbillS";

			}else {
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				mc=aDao.getmyCompany();
				ac=aDao.getcomInfo(company);
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				mav.addObject("msg","세금계산서 등록");
				view="Account/taxbillP";
			}
			}else {
				mav.addObject("msg","선택한 항목이없습니다");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> deleteSale(int cnt, String[] strArray) {
		Map<String, List<SaleInfo>> aMap=null;
		boolean result=false;
		boolean result2=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result2=aDao.deleteSale2(code);
			result=aDao.deleteSale(code);
		}
		if(result && result2) {
			List<SaleInfo> sList = aDao.getsaleList();
			aMap=new HashMap<>();
			   aMap.put("sList", sList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saledetails(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();

		if(check!=null) {
				List<SaleInfo> tList = new ArrayList<>();
				tList=aDao.getTaxbill(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				myCompany mc = new myCompany();
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("tList",tList);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/saledetails";
			}else {

			    mav.addObject("msg","매출만 거래명세서를 볼수 있습니다");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView acApproval(String check) {
		mav= new ModelAndView();
		String view ="";
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/acApproval";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView approvalLine() {
		String view=null;
		mav= new ModelAndView();
		List<approvalLine> aList = null;
		aList=aDao.approvalLine();
		if(aList.size()!=0) {
				mav.addObject("aList",new Gson().toJson(aList));
				view="Account/approvalLine";
			}else {

			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}

		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<approvalLine>> searchName(String name) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList=null;
		if(name!=null) {
			aList = aDao.searchName(name);
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> addApproval(int cnt, String[] strArray) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList= new ArrayList<>();
		System.out.println("숫자="+cnt);
		System.out.println("이름값="+strArray.length);
		String code="";
		approvalLine al = new approvalLine();
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			al=aDao.addApproval(code);
		    aList.add(al);
		}
		if(aList!=null) {
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> approLinecom(String[] code01) {
		Map<String, List<approvalLine>> aMap=null;
		System.out.println(code01.length);
		//System.out.println(code02[0]);

		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();

				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]);
					tList1.add(al);
				}
//				for(int i=0; i<code02.length; i++) {
//					approvalLine al = new approvalLine();
//					al=aDao.approLinecom2(code02[i]);
=======
//					al=aDao.approLinecom2(code02[i]); 
>>>>>>> origin/JSJ
//					tList2.add(al);
//				}
				aMap=new HashMap<>();
				System.out.println(tList1);
				aMap.put("tList1",tList1);
				//aMap.put("tList2",tList2);
			}else {
<<<<<<< HEAD

				aMap=null;;
			}

		return aMap;


=======
				
				aMap=null;;
			}
		
		return aMap;
	
	
>>>>>>> origin/JSJ
	}

	public ModelAndView approdocument(HttpServletRequest request, ApprovalDocument ad, HttpSession session) {
		String view=null;
		mav= new ModelAndView();
		boolean a=false;
		boolean b=false;
		boolean c=false;
		A_company ac = new A_company();
		ac = aDao.getcomcode(ad.getRs_comnum());
		ad.setRs_clcode(ac.getCl_code());
		ad.setRs_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("rs_pkind");
		String [] strcnt=request.getParameterValues("rs_cnt");
		String [] strprice=request.getParameterValues("rs_price");
		String [] strprice2=request.getParameterValues("rs_price2");
		String [] strtax=request.getParameterValues("rs_tax");
		String [] strtotal=request.getParameterValues("rs_total");
		String [] strmemo=request.getParameterValues("rs_memo");
		 		a = aDao.approvaldocu(ad);
		     	b = aDao.approdocument(ad);
<<<<<<< HEAD

=======
		     	
>>>>>>> origin/JSJ
		for(int i=0; i<strpkind.length; i++) {
			ad.setRs_pkind(strpkind[i]);
			ad.setRs_cnt(strcnt[i]);
			ad.setRs_price(strprice[i]);
			ad.setRs_price2(strprice2[i]);
			ad.setRs_tax(strtax[i]);
			ad.setRs_total(strtotal[i]);
			ad.setRs_memo(strmemo[i]);
			 	c=aDao.approdocument2(ad);
		}
		if(a && b && c) {
			//aDao.saleListDelete(ad);
			mav.addObject("num","1");
				view="Account/openTable";
			}else {
				mav.addObject("num","0");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getpkind(String pkind) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
		//SaleInfo si = new SaleInfo();
		sList=aDao.getpkind(pkind);
		//sList.add(si);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

	public ModelAndView SaleDetaile(String check) {
		String view=null;
		mav= new ModelAndView();
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/SaleDetaile";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="Account/opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> selectSearch(String select, String choice) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		sList=aDao.selectSreach(select,choice);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

<<<<<<< HEAD
	public Map<String, List<ApprovalDocu>> comparecode(String code) {
		Map<String, List<ApprovalDocu>> sMap=null;
		List<ApprovalDocu> sList=null;

=======
	public Map<String, List<Approvaldocu>> comparecode(String code) {
		Map<String, List<Approvaldocu>> sMap=null;
		List<Approvaldocu> sList=null;
		
>>>>>>> origin/JSJ
		sList=aDao.comparecode(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
<<<<<<< HEAD

	public Map<String, List<approvalLine>> getMyInfo(HttpSession session) {
		Map<String, List<approvalLine>> sMap=null;
		List<approvalLine> sList=null;
		String code = session.getAttribute("hrCode").toString();
		sList=aDao.getMyInfo(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
}
=======
}
>>>>>>> origin/JSJ

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-09-19 15:07:36.768
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-09-19 15:07:36.768
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-09-19 15:07:36.830
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.n7.erp.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.ModelAndView;
import com.n7.erp.dao.AccountDao;
import com.google.gson.Gson;
import com.n7.erp.bean.ac.A_company;
import com.n7.erp.bean.ac.ApprovalDocument;
<<<<<<< HEAD
import com.n7.erp.bean.ApprovalDocu;
=======
import com.n7.erp.bean.ac.Approvaldocu;
>>>>>>> origin/JSJ
import com.n7.erp.bean.ac.SaleInfo;
import com.n7.erp.bean.ac.myCompany;
import com.n7.erp.bean.ac.approvalLine;



@Component
public class AccountMM {

	@Autowired
	AccountDao aDao;

	ModelAndView mav;

	public Map<String, List<A_company>> insertcomlist(A_company ac, HttpSession session) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_ccode(session.getAttribute("cCode").toString());
		if(ac.getCl_code()!="") {
			if(aDao.insertcomlist(ac)) {
			   List<A_company> aList = aDao.getComList(ac.getCl_code());
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
			}else {
				aMap=null;
			}
		}else {
			List<A_company> aList = aDao.getComList(ac.getCl_code());
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}
		return aMap;
	}

	public Map<String, List<A_company>> serchcomlist() {
		Map<String, List<A_company>> aMap=null;
			   List<A_company> aList = aDao.getCompanyList();
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		return aMap;
	}

	public Map<String, List<A_company>> searchcode(A_company ac, String code) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_code(code);
		   List<A_company> aList = aDao.getsearchCode(ac);
		   if(aList!=null) {
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		   }
	return aMap;
}

	public Map<String, List<A_company>> deleteCom(int cnt, String[] strArray) {
		Map<String, List<A_company>> aMap=null;
		boolean result=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result=aDao.deleteCom(code);
		}
		if(result) {
			List<A_company> aList = aDao.getCompanyList();
			aMap=new HashMap<>();
			   aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saleinsert(HttpServletRequest request, SaleInfo si, HttpSession session) {
		String view=null;
		boolean a=false;
		boolean b= false;
		mav= new ModelAndView();
		A_company ac = new A_company();
		ac = aDao.getcomcode(si.getS_comnum());
		si.setS_clcode(ac.getCl_code());
		si.setS_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("s_pkind");
		String [] strcnt=request.getParameterValues("s_cnt");
		String [] strprice=request.getParameterValues("s_price");
		String [] strprice2=request.getParameterValues("s_price2");
		String [] strtax=request.getParameterValues("s_tax");
		String [] strtotal=request.getParameterValues("s_total");
		String [] strmemo=request.getParameterValues("s_memo");
		     	a = aDao.saleinsert(si);
		if(a && b) {
			    mav.addObject("msg","전표등록성공");
			    view="Account/openTable";
			}else {
				mav.addObject("msg","전표등록실패");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getsaleList() {
		Map<String, List<SaleInfo>> aMap=null;
		   List<SaleInfo> sList1 = aDao.getsaleList();
		   //List<SaleInfo> sList2 = aDao.getsaleList2();
		   if(sList1!=null) {
			   aMap=new HashMap<>();
			   aMap.put("sList1", sList1);
		   }else {
			   aMap=null;
		   }
		   //aMap.put("sList2", sList2);
	return aMap;
}

	public Map<String, List<SaleInfo>> getList(String code) {
		System.out.println(code);
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList = aDao.getList(code);
		if(sList!=null){
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}
		return sMap;
	}

	public ModelAndView getTaxbill(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();
		if(check!=null) {
			if(check.contains("S")) {
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				ac=aDao.getcomInfo(company);
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/taxbillS";

			}else {
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				mc=aDao.getmyCompany();
				ac=aDao.getcomInfo(company);
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				mav.addObject("msg","세금계산서 등록");
				view="Account/taxbillP";
			}
			}else {
				mav.addObject("msg","선택한 항목이없습니다");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> deleteSale(int cnt, String[] strArray) {
		Map<String, List<SaleInfo>> aMap=null;
		boolean result=false;
		boolean result2=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result2=aDao.deleteSale2(code);
			result=aDao.deleteSale(code);
		}
		if(result && result2) {
			List<SaleInfo> sList = aDao.getsaleList();
			aMap=new HashMap<>();
			   aMap.put("sList", sList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saledetails(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();

		if(check!=null) {
				List<SaleInfo> tList = new ArrayList<>();
				tList=aDao.getTaxbill(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				myCompany mc = new myCompany();
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("tList",tList);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/saledetails";
			}else {

			    mav.addObject("msg","매출만 거래명세서를 볼수 있습니다");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView acApproval(String check) {
		mav= new ModelAndView();
		String view ="";
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/acApproval";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView approvalLine() {
		String view=null;
		mav= new ModelAndView();
		List<approvalLine> aList = null;
		aList=aDao.approvalLine();
		if(aList.size()!=0) {
				mav.addObject("aList",new Gson().toJson(aList));
				view="Account/approvalLine";
			}else {

			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}

		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<approvalLine>> searchName(String name) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList=null;
		if(name!=null) {
			aList = aDao.searchName(name);
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> addApproval(int cnt, String[] strArray) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList= new ArrayList<>();
		System.out.println("숫자="+cnt);
		System.out.println("이름값="+strArray.length);
		String code="";
		approvalLine al = new approvalLine();
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			al=aDao.addApproval(code);
		    aList.add(al);
		}
		if(aList!=null) {
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> approLinecom(String[] code01) {
		Map<String, List<approvalLine>> aMap=null;
		System.out.println(code01.length);
		//System.out.println(code02[0]);

		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();

				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]);
					tList1.add(al);
				}
//				for(int i=0; i<code02.length; i++) {
//					approvalLine al = new approvalLine();
//					al=aDao.approLinecom2(code02[i]);
=======
//					al=aDao.approLinecom2(code02[i]); 
>>>>>>> origin/JSJ
//					tList2.add(al);
//				}
				aMap=new HashMap<>();
				System.out.println(tList1);
				aMap.put("tList1",tList1);
				//aMap.put("tList2",tList2);
			}else {
<<<<<<< HEAD

				aMap=null;;
			}

		return aMap;


=======
				
				aMap=null;;
			}
		
		return aMap;
	
	
>>>>>>> origin/JSJ
	}

	public ModelAndView approdocument(HttpServletRequest request, ApprovalDocument ad, HttpSession session) {
		String view=null;
		mav= new ModelAndView();
		boolean a=false;
		boolean b=false;
		boolean c=false;
		A_company ac = new A_company();
		ac = aDao.getcomcode(ad.getRs_comnum());
		ad.setRs_clcode(ac.getCl_code());
		ad.setRs_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("rs_pkind");
		String [] strcnt=request.getParameterValues("rs_cnt");
		String [] strprice=request.getParameterValues("rs_price");
		String [] strprice2=request.getParameterValues("rs_price2");
		String [] strtax=request.getParameterValues("rs_tax");
		String [] strtotal=request.getParameterValues("rs_total");
		String [] strmemo=request.getParameterValues("rs_memo");
		 		a = aDao.approvaldocu(ad);
		     	b = aDao.approdocument(ad);
<<<<<<< HEAD

=======
		     	
>>>>>>> origin/JSJ
		for(int i=0; i<strpkind.length; i++) {
			ad.setRs_pkind(strpkind[i]);
			ad.setRs_cnt(strcnt[i]);
			ad.setRs_price(strprice[i]);
			ad.setRs_price2(strprice2[i]);
			ad.setRs_tax(strtax[i]);
			ad.setRs_total(strtotal[i]);
			ad.setRs_memo(strmemo[i]);
			 	c=aDao.approdocument2(ad);
		}
		if(a && b && c) {
			//aDao.saleListDelete(ad);
			mav.addObject("num","1");
				view="Account/openTable";
			}else {
				mav.addObject("num","0");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getpkind(String pkind) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
		//SaleInfo si = new SaleInfo();
		sList=aDao.getpkind(pkind);
		//sList.add(si);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

	public ModelAndView SaleDetaile(String check) {
		String view=null;
		mav= new ModelAndView();
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/SaleDetaile";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="Account/opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> selectSearch(String select, String choice) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		sList=aDao.selectSreach(select,choice);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

<<<<<<< HEAD
	public Map<String, List<ApprovalDocu>> comparecode(String code) {
		Map<String, List<ApprovalDocu>> sMap=null;
		List<ApprovalDocu> sList=null;

=======
	public Map<String, List<Approvaldocu>> comparecode(String code) {
		Map<String, List<Approvaldocu>> sMap=null;
		List<Approvaldocu> sList=null;
		
>>>>>>> origin/JSJ
		sList=aDao.comparecode(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
<<<<<<< HEAD

	public Map<String, List<approvalLine>> getMyInfo(HttpSession session) {
		Map<String, List<approvalLine>> sMap=null;
		List<approvalLine> sList=null;
		String code = session.getAttribute("hrCode").toString();
		sList=aDao.getMyInfo(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
}
=======
}
>>>>>>> origin/JSJ

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:306)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:192)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-09-19 15:07:36.830
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:306)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:192)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-09-19 15:07:36.846
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:306)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:192)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jdt.core 4 4 2020-09-19 15:07:36.908
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.n7.erp.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.ModelAndView;
import com.n7.erp.dao.AccountDao;
import com.google.gson.Gson;
import com.n7.erp.bean.ac.A_company;
import com.n7.erp.bean.ac.ApprovalDocument;
<<<<<<< HEAD
import com.n7.erp.bean.ApprovalDocu;
=======
import com.n7.erp.bean.ac.Approvaldocu;
>>>>>>> origin/JSJ
import com.n7.erp.bean.ac.SaleInfo;
import com.n7.erp.bean.ac.myCompany;
import com.n7.erp.bean.ac.approvalLine;



@Component
public class AccountMM {

	@Autowired
	AccountDao aDao;

	ModelAndView mav;

	public Map<String, List<A_company>> insertcomlist(A_company ac, HttpSession session) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_ccode(session.getAttribute("cCode").toString());
		if(ac.getCl_code()!="") {
			if(aDao.insertcomlist(ac)) {
			   List<A_company> aList = aDao.getComList(ac.getCl_code());
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
			}else {
				aMap=null;
			}
		}else {
			List<A_company> aList = aDao.getComList(ac.getCl_code());
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}
		return aMap;
	}

	public Map<String, List<A_company>> serchcomlist() {
		Map<String, List<A_company>> aMap=null;
			   List<A_company> aList = aDao.getCompanyList();
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		return aMap;
	}

	public Map<String, List<A_company>> searchcode(A_company ac, String code) {
		Map<String, List<A_company>> aMap=null;
		ac.setCl_code(code);
		   List<A_company> aList = aDao.getsearchCode(ac);
		   if(aList!=null) {
			   aMap=new HashMap<>();
			   aMap.put("aList", aList);
		   }
	return aMap;
}

	public Map<String, List<A_company>> deleteCom(int cnt, String[] strArray) {
		Map<String, List<A_company>> aMap=null;
		boolean result=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result=aDao.deleteCom(code);
		}
		if(result) {
			List<A_company> aList = aDao.getCompanyList();
			aMap=new HashMap<>();
			   aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saleinsert(HttpServletRequest request, SaleInfo si, HttpSession session) {
		String view=null;
		boolean a=false;
		boolean b= false;
		mav= new ModelAndView();
		A_company ac = new A_company();
		ac = aDao.getcomcode(si.getS_comnum());
		si.setS_clcode(ac.getCl_code());
		si.setS_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("s_pkind");
		String [] strcnt=request.getParameterValues("s_cnt");
		String [] strprice=request.getParameterValues("s_price");
		String [] strprice2=request.getParameterValues("s_price2");
		String [] strtax=request.getParameterValues("s_tax");
		String [] strtotal=request.getParameterValues("s_total");
		String [] strmemo=request.getParameterValues("s_memo");
		     	a = aDao.saleinsert(si);
		if(a && b) {
			    mav.addObject("msg","전표등록성공");
			    view="Account/openTable";
			}else {
				mav.addObject("msg","전표등록실패");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getsaleList() {
		Map<String, List<SaleInfo>> aMap=null;
		   List<SaleInfo> sList1 = aDao.getsaleList();
		   //List<SaleInfo> sList2 = aDao.getsaleList2();
		   if(sList1!=null) {
			   aMap=new HashMap<>();
			   aMap.put("sList1", sList1);
		   }else {
			   aMap=null;
		   }
		   //aMap.put("sList2", sList2);
	return aMap;
}

	public Map<String, List<SaleInfo>> getList(String code) {
		System.out.println(code);
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList = aDao.getList(code);
		if(sList!=null){
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}
		return sMap;
	}

	public ModelAndView getTaxbill(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();
		if(check!=null) {
			if(check.contains("S")) {
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				ac=aDao.getcomInfo(company);
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/taxbillS";

			}else {
				myCompany mc = new myCompany();
				A_company ac = new A_company();
				List<SaleInfo> tList1 = aDao.saleDetaile(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				String company=tList1.get(0).getS_company();
				mc=aDao.getmyCompany();
				ac=aDao.getcomInfo(company);
				mav.addObject("mc",mc);
				mav.addObject("ac",ac);
				mav.addObject("tList1",tList1);
				mav.addObject("tList2",new Gson().toJson(tList2));
				mav.addObject("msg","세금계산서 등록");
				view="Account/taxbillP";
			}
			}else {
				mav.addObject("msg","선택한 항목이없습니다");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> deleteSale(int cnt, String[] strArray) {
		Map<String, List<SaleInfo>> aMap=null;
		boolean result=false;
		boolean result2=false;
		String code="";
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			result2=aDao.deleteSale2(code);
			result=aDao.deleteSale(code);
		}
		if(result && result2) {
			List<SaleInfo> sList = aDao.getsaleList();
			aMap=new HashMap<>();
			   aMap.put("sList", sList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public ModelAndView saledetails(String check) {
		String view=null;
		System.out.println(check);
		mav= new ModelAndView();

		if(check!=null) {
				List<SaleInfo> tList = new ArrayList<>();
				tList=aDao.getTaxbill(check);
				List<SaleInfo> tList2 = aDao.saleDetaile2(check);
				myCompany mc = new myCompany();
				mc=aDao.getmyCompany();
				mav.addObject("mc",mc);
				mav.addObject("tList",tList);
				mav.addObject("tList2",new Gson().toJson(tList2));
				view="Account/saledetails";
			}else {

			    mav.addObject("msg","매출만 거래명세서를 볼수 있습니다");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView acApproval(String check) {
		mav= new ModelAndView();
		String view ="";
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/acApproval";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public ModelAndView approvalLine() {
		String view=null;
		mav= new ModelAndView();
		List<approvalLine> aList = null;
		aList=aDao.approvalLine();
		if(aList.size()!=0) {
				mav.addObject("aList",new Gson().toJson(aList));
				view="Account/approvalLine";
			}else {

			    mav.addObject("msg","주소록에 정보가 없습니다");
				view="Account/acApproval";
			}

		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<approvalLine>> searchName(String name) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList=null;
		if(name!=null) {
			aList = aDao.searchName(name);
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> addApproval(int cnt, String[] strArray) {
		Map<String, List<approvalLine>> aMap=null;
		List<approvalLine> aList= new ArrayList<>();
		System.out.println("숫자="+cnt);
		System.out.println("이름값="+strArray.length);
		String code="";
		approvalLine al = new approvalLine();
		for(int i=0; i<cnt; i++) {
			code=strArray[i];
			al=aDao.addApproval(code);
		    aList.add(al);
		}
		if(aList!=null) {
			aMap=new HashMap<>();
			aMap.put("aList", aList);
		}else {
			aMap=null;
		}
		return aMap;
	}

	public Map<String, List<approvalLine>> approLinecom(String[] code01) {
		Map<String, List<approvalLine>> aMap=null;
		System.out.println(code01.length);
		//System.out.println(code02[0]);

		if(code01.length!=0) {
				List<approvalLine> tList1 = new ArrayList<>();
				//List<approvalLine> tList2= new ArrayList<>();

				for(int i=0; i<code01.length; i++) {
					approvalLine al = new approvalLine();
					al=aDao.approLinecom1(code01[i]);
					tList1.add(al);
				}
//				for(int i=0; i<code02.length; i++) {
//					approvalLine al = new approvalLine();
//					al=aDao.approLinecom2(code02[i]);
=======
//					al=aDao.approLinecom2(code02[i]); 
>>>>>>> origin/JSJ
//					tList2.add(al);
//				}
				aMap=new HashMap<>();
				System.out.println(tList1);
				aMap.put("tList1",tList1);
				//aMap.put("tList2",tList2);
			}else {
<<<<<<< HEAD

				aMap=null;;
			}

		return aMap;


=======
				
				aMap=null;;
			}
		
		return aMap;
	
	
>>>>>>> origin/JSJ
	}

	public ModelAndView approdocument(HttpServletRequest request, ApprovalDocument ad, HttpSession session) {
		String view=null;
		mav= new ModelAndView();
		boolean a=false;
		boolean b=false;
		boolean c=false;
		A_company ac = new A_company();
		ac = aDao.getcomcode(ad.getRs_comnum());
		ad.setRs_clcode(ac.getCl_code());
		ad.setRs_ccode(session.getAttribute("cCode").toString());
		String [] strpkind=request.getParameterValues("rs_pkind");
		String [] strcnt=request.getParameterValues("rs_cnt");
		String [] strprice=request.getParameterValues("rs_price");
		String [] strprice2=request.getParameterValues("rs_price2");
		String [] strtax=request.getParameterValues("rs_tax");
		String [] strtotal=request.getParameterValues("rs_total");
		String [] strmemo=request.getParameterValues("rs_memo");
		 		a = aDao.approvaldocu(ad);
		     	b = aDao.approdocument(ad);
<<<<<<< HEAD

=======
		     	
>>>>>>> origin/JSJ
		for(int i=0; i<strpkind.length; i++) {
			ad.setRs_pkind(strpkind[i]);
			ad.setRs_cnt(strcnt[i]);
			ad.setRs_price(strprice[i]);
			ad.setRs_price2(strprice2[i]);
			ad.setRs_tax(strtax[i]);
			ad.setRs_total(strtotal[i]);
			ad.setRs_memo(strmemo[i]);
			 	c=aDao.approdocument2(ad);
		}
		if(a && b && c) {
			//aDao.saleListDelete(ad);
			mav.addObject("num","1");
				view="Account/openTable";
			}else {
				mav.addObject("num","0");
				view="Account/openTable";
			}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> getpkind(String pkind) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
		//SaleInfo si = new SaleInfo();
		sList=aDao.getpkind(pkind);
		//sList.add(si);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

	public ModelAndView SaleDetaile(String check) {
		String view=null;
		mav= new ModelAndView();
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		if(check!=null) {
			List<SaleInfo> sList1 = aDao.saleDetaile(check);
			List<SaleInfo> sList2 = aDao.saleDetaile2(check);
			   if(sList1!=null) {
				   mav.addObject("sList1", sList1);
				   mav.addObject("sList2", new Gson().toJson(sList2));
				   view="Account/SaleDetaile";
			   }
		}else {
			mav.addObject("msg","불러올 데이터가 없습니다");
			view="Account/opentable";
		}
		mav.setViewName(view);
		return mav;
	}

	public Map<String, List<SaleInfo>> selectSearch(String select, String choice) {
		Map<String, List<SaleInfo>> sMap=null;
		List<SaleInfo> sList=null;
<<<<<<< HEAD

=======
		
>>>>>>> origin/JSJ
		sList=aDao.selectSreach(select,choice);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}

<<<<<<< HEAD
	public Map<String, List<ApprovalDocu>> comparecode(String code) {
		Map<String, List<ApprovalDocu>> sMap=null;
		List<ApprovalDocu> sList=null;

=======
	public Map<String, List<Approvaldocu>> comparecode(String code) {
		Map<String, List<Approvaldocu>> sMap=null;
		List<Approvaldocu> sList=null;
		
>>>>>>> origin/JSJ
		sList=aDao.comparecode(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
<<<<<<< HEAD

	public Map<String, List<approvalLine>> getMyInfo(HttpSession session) {
		Map<String, List<approvalLine>> sMap=null;
		List<approvalLine> sList=null;
		String code = session.getAttribute("hrCode").toString();
		sList=aDao.getMyInfo(code);
		System.out.println(sList);
		if(sList!=null) {
			sMap=new HashMap<>();
			sMap.put("sList", sList);
		}else {
			sMap=null;
		}
		return sMap;
	}
}
=======
}
>>>>>>> origin/JSJ

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1022)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:306)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:192)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui 4 0 2020-09-19 15:07:36.924
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1022)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:306)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:192)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 15:09:04.492
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 15:09:04.507
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.ui 4 0 2020-09-19 15:28:15.332
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (지정된 경로를 찾을 수 없습니다))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4735)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application$1.syncExec(E4Application.java:219)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:132)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:197)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:208)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:258)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:115)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager.access$1(MenuManager.java:463)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1037)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1061)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1042)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5137)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4769)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1480)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2142)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4923)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3624)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (지정된 경로를 찾을 수 없습니다))
	at org.eclipse.swt.SWT.error(SWT.java:4723)
	at org.eclipse.swt.SWT.error(SWT.java:4638)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesManager.loadImage(ExternalExecutablesManager.java:282)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1224)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 63 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (지정된 경로를 찾을 수 없습니다)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(Unknown Source)
	at java.io.FileInputStream.<init>(Unknown Source)
	at java.io.FileInputStream.<init>(Unknown Source)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 77 more

!ENTRY org.eclipse.ui 4 0 2020-09-19 15:28:30.022
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (지정된 경로를 찾을 수 없습니다))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4735)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application$1.syncExec(E4Application.java:219)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:132)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:197)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:208)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:258)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:115)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager.access$1(MenuManager.java:463)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1037)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1061)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1042)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5137)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4769)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1480)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2142)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4923)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3624)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (지정된 경로를 찾을 수 없습니다))
	at org.eclipse.swt.SWT.error(SWT.java:4723)
	at org.eclipse.swt.SWT.error(SWT.java:4638)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesManager.loadImage(ExternalExecutablesManager.java:282)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1224)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 63 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (지정된 경로를 찾을 수 없습니다)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(Unknown Source)
	at java.io.FileInputStream.<init>(Unknown Source)
	at java.io.FileInputStream.<init>(Unknown Source)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 77 more

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 15:28:33.263
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 15:28:33.293
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 15:28:59.765
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 15:28:59.780
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 15:29:33.626
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 15:29:33.637
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 15:29:41.708
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 15:29:41.719
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:29:51.191
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:29:51.200
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:29:51.213
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.jsdt.core 4 4 2020-09-19 15:29:52.885
!MESSAGE null
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.wst.jsdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1521)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.safeSetProperty(ClosureCompilerASTConverter.java:1690)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processBinaryExpression(ClosureCompilerASTConverter.java:514)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:187)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processFunctionCall(ClosureCompilerASTConverter.java:876)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:203)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transformAndSetProperty(ClosureCompilerASTConverter.java:1680)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processExpressionStatement(ClosureCompilerASTConverter.java:718)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:219)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processAstRoot(ClosureCompilerASTConverter.java:493)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:263)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.internal.compiler.closure.ClosureCompiler.parse(ClosureCompiler.java:120)
	at org.eclipse.wst.jsdt.core.dom.ASTParser.createAST(ASTParser.java:652)
	at org.eclipse.wst.jsdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:171)
	at org.eclipse.wst.jsdt.internal.core.Openable.generateInfos(Openable.java:243)
	at org.eclipse.wst.jsdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:538)
	at org.eclipse.wst.jsdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.wst.jsdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:179)
	at org.eclipse.wst.jsdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:98)
	at org.eclipse.wst.jsdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:742)
	at org.eclipse.wst.jsdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.wst.jsdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1257)
	at org.eclipse.wst.jsdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1234)
	at org.eclipse.wst.jsdt.web.core.javascript.JsTranslation.reconcileCompilationUnit(JsTranslation.java:567)
	at org.eclipse.wst.jsdt.web.core.internal.validation.JsValidator.performValidation(JsValidator.java:183)
	at org.eclipse.wst.jsdt.web.core.internal.validation.JsValidator.validateFile(JsValidator.java:382)
	at org.eclipse.wst.jsdt.web.core.internal.validation.JsValidator.validate(JsValidator.java:292)
	at org.eclipse.wst.sse.ui.internal.reconcile.validator.ReconcileStepForValidator.validate(ReconcileStepForValidator.java:252)
	at org.eclipse.wst.sse.ui.internal.reconcile.validator.ReconcileStepForValidator.reconcileModel(ReconcileStepForValidator.java:210)
	at org.eclipse.jface.text.reconciler.AbstractReconcileStep.reconcile(AbstractReconcileStep.java:92)
	at org.eclipse.wst.sse.ui.internal.reconcile.validator.ValidatorStrategy.reconcile(ValidatorStrategy.java:270)
	at org.eclipse.wst.sse.ui.internal.reconcile.DocumentRegionProcessor.process(DocumentRegionProcessor.java:323)
	at org.eclipse.wst.sse.ui.internal.reconcile.StructuredRegionProcessor.process(StructuredRegionProcessor.java:260)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor$BackgroundThread.run(DirtyRegionProcessor.java:694)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 15:30:22.093
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 15:30:22.114
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.wst.jsdt.core 4 4 2020-09-19 15:30:23.154
!MESSAGE null
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.wst.jsdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1521)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.safeSetProperty(ClosureCompilerASTConverter.java:1690)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processBinaryExpression(ClosureCompilerASTConverter.java:514)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:187)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processFunctionCall(ClosureCompilerASTConverter.java:876)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:203)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transformAndSetProperty(ClosureCompilerASTConverter.java:1680)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processExpressionStatement(ClosureCompilerASTConverter.java:718)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:219)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processAstRoot(ClosureCompilerASTConverter.java:493)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:263)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.internal.compiler.closure.ClosureCompiler.parse(ClosureCompiler.java:120)
	at org.eclipse.wst.jsdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:911)
	at org.eclipse.wst.jsdt.core.dom.ASTParser.createAST(ASTParser.java:675)
	at org.eclipse.wst.jsdt.internal.core.search.indexing.SourceIndexer.indexDocument(SourceIndexer.java:93)
	at org.eclipse.wst.jsdt.internal.core.search.JavaSearchParticipant.indexDocument(JavaSearchParticipant.java:79)
	at org.eclipse.wst.jsdt.web.core.javascript.search.JsSearchParticipant.indexDocument(JsSearchParticipant.java:82)
	at org.eclipse.wst.jsdt.internal.core.search.indexing.IndexManager.indexDocument(IndexManager.java:325)
	at org.eclipse.wst.jsdt.internal.core.search.indexing.IndexManager$1.execute(IndexManager.java:728)
	at org.eclipse.wst.jsdt.internal.core.search.processing.JobManager.run(JobManager.java:393)
	at java.lang.Thread.run(Unknown Source)

!ENTRY org.eclipse.wst.jsdt.core 4 4 2020-09-19 15:31:03.756
!MESSAGE null
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.wst.jsdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1521)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.safeSetProperty(ClosureCompilerASTConverter.java:1690)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processBinaryExpression(ClosureCompilerASTConverter.java:514)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:187)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processFunctionCall(ClosureCompilerASTConverter.java:876)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:203)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transformAndSetProperty(ClosureCompilerASTConverter.java:1680)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processExpressionStatement(ClosureCompilerASTConverter.java:718)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:219)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processAstRoot(ClosureCompilerASTConverter.java:493)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:263)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.internal.compiler.closure.ClosureCompiler.parse(ClosureCompiler.java:120)
	at org.eclipse.wst.jsdt.core.dom.ASTParser.createAST(ASTParser.java:652)
	at org.eclipse.wst.jsdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:171)
	at org.eclipse.wst.jsdt.internal.core.Openable.generateInfos(Openable.java:243)
	at org.eclipse.wst.jsdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:538)
	at org.eclipse.wst.jsdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1107)
	at org.eclipse.wst.jsdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1085)
	at org.eclipse.wst.jsdt.internal.core.search.BasicSearchEngine.searchAllTypeNames(BasicSearchEngine.java:1109)
	at org.eclipse.wst.jsdt.internal.core.search.BasicSearchEngine.searchAllTypeNames(BasicSearchEngine.java:946)
	at org.eclipse.wst.jsdt.internal.core.SearchableEnvironment.findTypes(SearchableEnvironment.java:416)
	at org.eclipse.wst.jsdt.internal.codeassist.SelectionEngine.select(SelectionEngine.java:785)
	at org.eclipse.wst.jsdt.internal.core.Openable.codeSelect(Openable.java:165)
	at org.eclipse.wst.jsdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:245)
	at org.eclipse.wst.jsdt.web.core.javascript.JsTranslation.getElementsFromJsRange(JsTranslation.java:312)
	at org.eclipse.wst.jsdt.web.ui.internal.hyperlink.JSDTHyperlinkDetector.detectHyperlinks(JSDTHyperlinkDetector.java:178)
	at org.eclipse.ui.texteditor.HyperlinkDetectorRegistry$HyperlinkDetectorDelegate.detectHyperlinks(HyperlinkDetectorRegistry.java:81)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.findHyperlinks(HyperlinkManager.java:289)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.findHyperlinks(HyperlinkManager.java:262)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.mouseMove(HyperlinkManager.java:457)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1037)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4030)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.wst.jsdt.core 4 4 2020-09-19 15:31:05.257
!MESSAGE null
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.wst.jsdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1521)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.safeSetProperty(ClosureCompilerASTConverter.java:1690)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processBinaryExpression(ClosureCompilerASTConverter.java:514)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:187)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processFunctionCall(ClosureCompilerASTConverter.java:876)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:203)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transformAndSetProperty(ClosureCompilerASTConverter.java:1680)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processExpressionStatement(ClosureCompilerASTConverter.java:718)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:219)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processBlock(ClosureCompilerASTConverter.java:528)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:199)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transformAndSetProperty(ClosureCompilerASTConverter.java:1680)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processFunction(ClosureCompilerASTConverter.java:805)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:229)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transformAndSetProperty(ClosureCompilerASTConverter.java:1680)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processBinaryExpression(ClosureCompilerASTConverter.java:515)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:187)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processFunctionCall(ClosureCompilerASTConverter.java:876)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:203)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transformAndSetProperty(ClosureCompilerASTConverter.java:1680)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processExpressionStatement(ClosureCompilerASTConverter.java:718)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:219)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processAstRoot(ClosureCompilerASTConverter.java:493)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:263)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.internal.compiler.closure.ClosureCompiler.parse(ClosureCompiler.java:120)
	at org.eclipse.wst.jsdt.core.dom.ASTParser.createAST(ASTParser.java:652)
	at org.eclipse.wst.jsdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:171)
	at org.eclipse.wst.jsdt.internal.core.Openable.generateInfos(Openable.java:243)
	at org.eclipse.wst.jsdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:538)
	at org.eclipse.wst.jsdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1107)
	at org.eclipse.wst.jsdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1085)
	at org.eclipse.wst.jsdt.internal.core.search.BasicSearchEngine.searchAllTypeNames(BasicSearchEngine.java:1109)
	at org.eclipse.wst.jsdt.internal.core.search.BasicSearchEngine.searchAllTypeNames(BasicSearchEngine.java:946)
	at org.eclipse.wst.jsdt.internal.core.SearchableEnvironment.findTypes(SearchableEnvironment.java:416)
	at org.eclipse.wst.jsdt.internal.codeassist.SelectionEngine.select(SelectionEngine.java:785)
	at org.eclipse.wst.jsdt.internal.core.Openable.codeSelect(Openable.java:165)
	at org.eclipse.wst.jsdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:245)
	at org.eclipse.wst.jsdt.web.core.javascript.JsTranslation.getElementsFromJsRange(JsTranslation.java:312)
	at org.eclipse.wst.jsdt.web.ui.internal.hyperlink.JSDTHyperlinkDetector.detectHyperlinks(JSDTHyperlinkDetector.java:178)
	at org.eclipse.ui.texteditor.HyperlinkDetectorRegistry$HyperlinkDetectorDelegate.detectHyperlinks(HyperlinkDetectorRegistry.java:81)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.findHyperlinks(HyperlinkManager.java:289)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.findHyperlinks(HyperlinkManager.java:262)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.mouseMove(HyperlinkManager.java:457)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1037)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4030)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:31:52.502
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:31:52.513
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:31:52.521
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:32:23.988
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:32:24.005
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:32:24.012
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:33:16.117
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:33:16.133
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:33:16.141
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.jsdt.core 4 4 2020-09-19 15:34:10.428
!MESSAGE null
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.wst.jsdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1521)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.safeSetProperty(ClosureCompilerASTConverter.java:1690)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processBinaryExpression(ClosureCompilerASTConverter.java:514)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:187)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processFunctionCall(ClosureCompilerASTConverter.java:876)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:203)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transformAndSetProperty(ClosureCompilerASTConverter.java:1680)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processExpressionStatement(ClosureCompilerASTConverter.java:718)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:219)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processBlock(ClosureCompilerASTConverter.java:528)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:199)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transformAndSetProperty(ClosureCompilerASTConverter.java:1680)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processIfStatement(ClosureCompilerASTConverter.java:904)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:237)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transformAndSetProperty(ClosureCompilerASTConverter.java:1680)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processIfStatement(ClosureCompilerASTConverter.java:904)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:237)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transformAndSetProperty(ClosureCompilerASTConverter.java:1680)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processIfStatement(ClosureCompilerASTConverter.java:904)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:237)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transformAndSetProperty(ClosureCompilerASTConverter.java:1680)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processIfStatement(ClosureCompilerASTConverter.java:904)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:237)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processBlock(ClosureCompilerASTConverter.java:528)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:199)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transformAndSetProperty(ClosureCompilerASTConverter.java:1680)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processFunction(ClosureCompilerASTConverter.java:805)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:229)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processFunctionCall(ClosureCompilerASTConverter.java:876)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:203)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transformAndSetProperty(ClosureCompilerASTConverter.java:1680)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processExpressionStatement(ClosureCompilerASTConverter.java:718)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:219)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.processAstRoot(ClosureCompilerASTConverter.java:493)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.process(ClosureCompilerASTConverter.java:263)
	at org.eclipse.wst.jsdt.core.dom.ClosureCompilerASTConverter.transform(ClosureCompilerASTConverter.java:128)
	at org.eclipse.wst.jsdt.internal.compiler.closure.ClosureCompiler.parse(ClosureCompiler.java:120)
	at org.eclipse.wst.jsdt.core.dom.ASTParser.createAST(ASTParser.java:652)
	at org.eclipse.wst.jsdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:171)
	at org.eclipse.wst.jsdt.internal.core.Openable.generateInfos(Openable.java:243)
	at org.eclipse.wst.jsdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:538)
	at org.eclipse.wst.jsdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.wst.jsdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:179)
	at org.eclipse.wst.jsdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:98)
	at org.eclipse.wst.jsdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:742)
	at org.eclipse.wst.jsdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.wst.jsdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1257)
	at org.eclipse.wst.jsdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1234)
	at org.eclipse.wst.jsdt.web.core.javascript.JsTranslation.reconcileCompilationUnit(JsTranslation.java:567)
	at org.eclipse.wst.jsdt.web.core.internal.validation.JsValidator.performValidation(JsValidator.java:183)
	at org.eclipse.wst.jsdt.web.core.internal.validation.JsValidator.validateFile(JsValidator.java:382)
	at org.eclipse.wst.jsdt.web.core.internal.validation.JsValidator.validate(JsValidator.java:292)
	at org.eclipse.wst.sse.ui.internal.reconcile.validator.ReconcileStepForValidator.validate(ReconcileStepForValidator.java:252)
	at org.eclipse.wst.sse.ui.internal.reconcile.validator.ReconcileStepForValidator.reconcileModel(ReconcileStepForValidator.java:210)
	at org.eclipse.jface.text.reconciler.AbstractReconcileStep.reconcile(AbstractReconcileStep.java:92)
	at org.eclipse.wst.sse.ui.internal.reconcile.validator.ValidatorStrategy.reconcile(ValidatorStrategy.java:270)
	at org.eclipse.wst.sse.ui.internal.reconcile.DocumentRegionProcessor.process(DocumentRegionProcessor.java:323)
	at org.eclipse.wst.sse.ui.internal.reconcile.StructuredRegionProcessor.process(StructuredRegionProcessor.java:260)
	at org.eclipse.wst.sse.ui.internal.reconcile.DirtyRegionProcessor$BackgroundThread.run(DirtyRegionProcessor.java:694)

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:35:15.336
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:35:15.357
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:35:15.367
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:37:17.329
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:37:17.359
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:37:17.371
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:37:26.739
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:37:26.746
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:37:26.754
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:37:32.162
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:37:32.177
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 15:37:32.189
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 15:38:40.827
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 15:38:40.855
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 15:39:57.169
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 15:39:57.194
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:00:00.419
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:00:00.512
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:00:02.940
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:00:02.990
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:00:10.954
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:00:10.959
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:00:10.966
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:00:18.238
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:00:18.310
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:00:18.316
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:00:26.421
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:00:26.431
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:00:26.438
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:00:32.814
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:00:32.826
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:00:32.833
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:02:51.112
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:02:51.190
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:07:08.639
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:07:08.732
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:07:14.109
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:07:14.143
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:07:32.122
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:07:32.187
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:07:46.974
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:07:46.990
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.jdt.launching 4 150 2020-09-19 16:12:32.103
!MESSAGE The archive: J:/apache-tomcat-9.0.36/bin/bootstrap.jar which is referenced by the classpath, does not exist.

!ENTRY org.eclipse.jdt.launching 4 150 2020-09-19 16:13:32.573
!MESSAGE The archive: J:/apache-tomcat-9.0.36/bin/bootstrap.jar which is referenced by the classpath, does not exist.

!ENTRY org.eclipse.jdt.launching 4 150 2020-09-19 16:14:38.754
!MESSAGE The archive: J:/apache-tomcat-9.0.36/bin/bootstrap.jar which is referenced by the classpath, does not exist.

!ENTRY org.eclipse.jdt.launching 4 150 2020-09-19 16:14:43.709
!MESSAGE The archive: J:/apache-tomcat-9.0.36/bin/bootstrap.jar which is referenced by the classpath, does not exist.

!ENTRY org.eclipse.ui 4 0 2020-09-19 16:15:05.221
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (지정된 경로를 찾을 수 없습니다))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4735)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application$1.syncExec(E4Application.java:219)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:132)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:197)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:208)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:258)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:115)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager.access$1(MenuManager.java:463)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1037)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1061)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1042)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5137)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4769)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1480)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2142)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4923)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3624)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (지정된 경로를 찾을 수 없습니다))
	at org.eclipse.swt.SWT.error(SWT.java:4723)
	at org.eclipse.swt.SWT.error(SWT.java:4638)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesManager.loadImage(ExternalExecutablesManager.java:282)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1224)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 63 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (지정된 경로를 찾을 수 없습니다)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(Unknown Source)
	at java.io.FileInputStream.<init>(Unknown Source)
	at java.io.FileInputStream.<init>(Unknown Source)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 77 more

!ENTRY org.eclipse.ui 4 0 2020-09-19 16:15:19.765
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (지정된 경로를 찾을 수 없습니다))
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:68)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4735)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application$1.syncExec(E4Application.java:219)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:132)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:113)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:197)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:208)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:258)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:115)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager.access$1(MenuManager.java:463)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1037)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1061)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1042)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5137)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4769)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1480)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2142)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4923)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4071)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3624)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)
Caused by: org.eclipse.swt.SWTException: i/o error (java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (지정된 경로를 찾을 수 없습니다))
	at org.eclipse.swt.SWT.error(SWT.java:4723)
	at org.eclipse.swt.SWT.error(SWT.java:4638)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:184)
	at org.eclipse.tm.terminal.view.ui.local.showin.ExternalExecutablesManager.loadImage(ExternalExecutablesManager.java:282)
	at org.eclipse.tm.terminal.view.ui.local.showin.DynamicContributionItems.getContributionItems(DynamicContributionItems.java:74)
	at org.eclipse.ui.actions.CompoundContributionItem.getContributionItemsToFill(CompoundContributionItem.java:83)
	at org.eclipse.ui.actions.CompoundContributionItem.fill(CompoundContributionItem.java:57)
	at org.eclipse.ui.internal.menus.DynamicMenuContributionItem.fill(DynamicMenuContributionItem.java:146)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1224)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	... 63 more
Caused by: java.io.FileNotFoundException: C:\Program Files\Git\mingw64\share\git\git-for-windows.ico (지정된 경로를 찾을 수 없습니다)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(Unknown Source)
	at java.io.FileInputStream.<init>(Unknown Source)
	at java.io.FileInputStream.<init>(Unknown Source)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:181)
	... 77 more

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:17:57.931
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:17:57.941
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:18:15.847
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:18:15.858
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:18:32.194
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:18:32.205
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:19:47.825
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:19:47.832
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:19:47.839
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:20:35.733
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:20:35.741
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:20:35.748
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:21:26.605
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:21:26.617
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:23:17.152
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:23:17.179
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:23:22.871
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:23:22.877
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:23:22.883
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:25:20.059
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:25:20.101
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:27:25.864
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:27:25.877
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:27:25.888
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:29:30.123
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:29:30.129
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:29:30.135
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:29:43.661
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:29:43.668
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:29:43.676
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:29:50.022
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:29:50.029
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:29:50.035
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:29:53.471
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:29:53.478
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:29:53.484
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:00.127
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:00.133
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:00.140
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:05.371
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:05.377
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:05.384
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:07.935
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:07.941
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:07.948
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:24.640
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:24.647
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:24.653
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:27.654
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:27.663
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:27.670
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:34.859
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:34.866
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:34.872
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:37.126
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:37.132
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:37.138
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:39.747
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:39.753
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:39.760
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:42.040
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:42.046
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:42.052
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:47.181
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:47.187
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:47.193
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:55.515
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:55.521
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:55.527
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:58.744
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:58.750
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:30:58.756
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:31:08.244
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:31:08.249
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:31:08.255
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:31:13.514
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:31:13.520
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.wst.html.ui 1 1 2020-09-19 16:31:13.526
!MESSAGE No line style provider for org.eclipse.wst.html.SCRIPT

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:31:16.242
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2020-09-19 16:31:16.251
!MESSAGE Using platform encoding (MS949 actually) to copy filtered resources, i.e. build is platform dependent!
